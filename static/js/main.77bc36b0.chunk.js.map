{"version":3,"sources":["lib/components/visual/Day/Day.module.css","lib/components/visual/Year/Year.module.css","lib/components/visual/Month/Month.module.css","lib/components/visual/Popover/PopoverWrapper.module.css","lib/components/visual/Header/Header.module.css","lib/components/visual/Selector/Selector.module.css","lib/components/visual/Weekdays/Weekdays.module.css","lib/components/visual/Input/Input.module.css","lib/components/visual/Datepicker/DatepickerWrapper.module.css","lib/components/visual/Popover/PopoverProvider.module.css","lib/components/visual/Modal/ModalWrapper.module.css","lib/components/visual/Modal/ModalProvider.module.css","lib/utils/compose.js","lib/store/createStoreProvider.js","lib/features/modal/context.js","lib/features/modal/ModalReducer.js","lib/features/modal/withModalProvider.js","lib/features/modal/actionTypes.js","lib/features/datepicker/context.js","lib/features/datepicker/DatepickerReducer.js","lib/features/datepicker/withDatepickerProvider.js","lib/features/datepicker/actionTypes.js","lib/features/datepicker/useHasInitialValues.js","lib/utils/dateUtils.js","lib/features/datepicker/actionCreators.js","lib/features/datepicker/useSetInitialValues.js","lib/utils/curry.js","lib/utils/enumerators.js","lib/features/locale/withLocaleContext.js","lib/features/locale/useWeekDayNames.js","lib/features/locale/useLocaleEnumerators.js","lib/components/visual/Day/DayGrid.js","lib/components/visual/Month/MonthGrid.js","lib/components/visual/Year/YearGrid.js","lib/components/logic/Calendar/useLogic.js","lib/components/logic/Calendar/Calendar.js","lib/features/locale/useMonthStepperLabels.js","lib/components/logic/Selector/useLogic.js","lib/components/logic/Selector/Selector.js","lib/components/logic/Header/Header.js","lib/utils/defaultTheme.js","lib/features/theme/withTheme.js","lib/features/theme/useTheme.js","lib/components/visual/Datepicker/DatepickerWrapper.js","lib/features/locale/useFormatDate.js","lib/components/visual/Header/Header.js","lib/components/visual/Selector/Selector.js","lib/components/visual/Day/Day.js","lib/components/visual/Month/Month.js","lib/utils/scrollIntoView/isInViewport.js","lib/utils/scrollIntoView/scrollStop.js","lib/utils/scrollIntoView/noScroll.js","lib/utils/scrollIntoView/useScrollIntoView.js","lib/components/visual/Year/Year.js","lib/components/visual/Weekdays/Weekdays.js","lib/utils/config.js","lib/features/datepicker/useIncrementPrecision.js","lib/components/Datepicker/useLogic.js","lib/components/Datepicker/Datepicker.js","lib/components/Datepicker/index.js","lib/features/modal/actionCreators.js","lib/components/visual/Input/Input.js","lib/components/visual/Popover/PopoverProvider.js","lib/utils/useOnClickOutside.js","lib/components/visual/Popover/PopoverWrapper.js","lib/components/visual/Modal/ModalWrapper.js","lib/components/DatepickerInput/useLogic.js","lib/components/DatepickerInput/DatepickerInput.js","lib/components/visual/Modal/ModalProvider.js","lib/components/DatepickerInput/index.js","lib/index.js","environment/App/App.js","index.js"],"names":["module","exports","compose","fns","args","reduceRight","params","f","Array","isArray","createStoreProvider","initialState","reducer","context","children","Provider","useReducer","state","dispatch","value","ModalContext","createContext","useModalContext","useContext","isVisible","action","type","payload","withModalProvider","WrappedComponent","props","DatepickerContext","useDatepickerContext","selectedTimestamp","precision","visibleTimestamp","todayTimestamp","withDatepickerProvider","useHasInitialValues","formatDateWithLocale","formatWithOptions","checkIsSameMonth","isSameMonth","checkIsSameYear","isSameYear","checkIsSameDay","isSameDay","convertToTimestamp","date","getTime","convertToDate","timestamp","toDate","checkIsWithinInterval","isWithinInterval","checkIsWeekend","isWeekend","matchDatesWithPrecision","dateLeft","dateRight","day","month","year","ceilMonth","endOfMonth","floorMonth","startOfMonth","addMonth","amount","addMonths","useDatepickerActions","setDate","setToday","setVisibility","setPrecision","useSetInitialValues","initialDate","today","minPrecision","hasInitialValues","useEffect","curry","fn","curried","length","apply","args2","concat","getYearsCurried","startDate","endDate","startYear","getYear","endYear","keys","map","i","name","numeric","addYears","getMonthsCurried","locale","startOfYear","wide","localize","width","abbreviated","narrow","getDaysCurried","monthStart","monthEnd","startOfWeekWithOptions","endOfWeekWithOptions","cellLength","differenceInDays","fill","_","addDays","getDate","LocaleContext","React","useLocaleContext","dateFnsLocale","defaultProps","defaultLocale","withLocaleContext","restProps","useWeekDayNames","dayNumber","options","weekStartsOn","short","getWeekDayNames","useLocaleEnumerators","getDays","getMonths","getYears","DayGrid","className","classes","grid","MonthGrid","role","YearGrid","scrollContainer","useLogic","disableDate","highlightDate","onDateSet","highlightWeekends","getIsDisabled","useCallback","start","end","getIsHighlighted","handleDateSet","getIsWeekend","getBelongsToSameMonth","getIsSelected","getIsCurrent","Calendar","wrapperClassName","renderAs","getItems","items","Wrapper","VisualComponent","isSelected","isCurrent","belongsToSameMonth","isDisabled","isHighlighted","key","useMonthStepperLabels","incrementMonthLabel","formatDistanceStrictWithOptions","addSuffix","Date","decrementMonthLabel","isAvailable","onSetPrecision","nextPrecision","onIncrementMonth","nextDate","onDecrementMonth","Selector","monthStepperLabels","SelectorVisual","incrementMonth","decrementMonth","todayDate","selectedDate","visibleDate","Header","title","HeaderUI","gray","defaultTheme","fontPrimary","fontSecondary","fontFallback","fontSize","fontWeight","fontSizeSmall","fontSizeBig","calendarWidth","datePickerWidth","selectorHeight","calendarHeight","innerPadding","entryHeight","entryMargin","datepickerBorderRadius","entryBorderRadius","bgColor","textColor","headerBgColor","weekendTextColor","headerTextColor","borderColor","modalBgColor","weekDayColor","entryHoverColor","entrySelectedColor","entryHighlightColor","inputWidth","inputPadding","inputBorderRadius","inputBorderColor","inputHighlightColor","ThemeContext","useThemeContext","theme","withTheme","useThemeFeature","defaults","propsTheme","mergedTheme","useTheme","ref","setRef","style","DatepickerWrapper","aria-label","datepickerWrapper","useFormatDate","formatDate","wrapper","aria-live","currentDate","buttons","onClick","stepper","Day","handleClick","tabIndex","onKeyDown","classNames","aria-disabled","placeholder","Month","onKeyPress","isInViewport","elem","distance","getBoundingClientRect","top","left","bottom","window","innerHeight","document","documentElement","clientHeight","right","innerWidth","clientWidth","scrollStop","callback","isScrolling","addEventListener","clearTimeout","setTimeout","noScroll","x","scrollX","y","scrollY","scrollTo","useScrollIntoView","containerSelector","condition","element","current","container","closest","event","removeEventListener","scrollIntoView","block","inline","Year","useRef","Weekdays","names","Object","freeze","supportedPrecisions","useIncrementPrecision","precisionEnum","currentPrecision","currentIndex","indexOf","getNextPrecision","slice","limitPrecision","config","incrementPrecision","Datepicker","showHeader","renderDayAs","dayCalendarClassName","renderMonthAs","monthCalendarClassName","renderYearAs","yearCalendarClassName","renderWeekdaysAs","renderHeaderAs","renderSelectorAs","WeekdaysComponent","weekDayNames","undefined","PropTypes","instanceOf","bool","string","oneOf","func","isRequired","elementType","shape","now","useModalActions","toggleDatepicker","Input","onChange","input","readOnly","stopPropagation","PopoverProvider","renderDatepickerAs","wrapPopoverWith","align","isOpen","position","padding","containerClassName","content","useOnClickOutside","handler","listener","contains","target","PopoverWrapper","classnames","triangle","ModalWrapper","hideOnSelect","formatValue","formatPattern","DatepickerInput","renderInputAs","mode","popoverProvider","modalProvider","wrapModalWith","datePickerProps","datePickerDefaultProps","RenderingLogicProvider","InputComponent","DatepickerComponent","RefWrap","forwardRef","modalContainerRef","useState","isNodeAttached","setIsNodeAttached","createElement","classList","add","setProperty","body","appendChild","remove","ReactDOM","createPortal","WrappedDatepickerInput","WrappedDatepicker","App","console","log","customLocale","render","getElementById"],"mappings":"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","file":"static/js/main.77bc36b0.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid\":\"Day_grid__3UuOz\",\"placeholder\":\"Day_placeholder__3XkR1\",\"wrapper\":\"Day_wrapper__16e8X\",\"isDisabled\":\"Day_isDisabled__biXes\",\"isSelected\":\"Day_isSelected__91sfQ\",\"isWeekend\":\"Day_isWeekend__3pTsr\",\"isCurrent\":\"Day_isCurrent__1b9Zu\",\"isHighlighted\":\"Day_isHighlighted__qI345\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"scrollContainer\":\"Year_scrollContainer__2dHSr\",\"grid\":\"Year_grid__1K7Ky\",\"wrapper\":\"Year_wrapper__BNZvU\",\"isSelected\":\"Year_isSelected__GWYvX\",\"isCurrent\":\"Year_isCurrent__b4Plg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid\":\"Month_grid__RMUU4\",\"wrapper\":\"Month_wrapper__26EZU\",\"isDisabled\":\"Month_isDisabled__2_hGg\",\"isSelected\":\"Month_isSelected__Tm-YS\",\"isCurrent\":\"Month_isCurrent__9dGCg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"PopoverWrapper_wrapper__31e3f\",\"bottom\":\"PopoverWrapper_bottom__Hoq8x\",\"top\":\"PopoverWrapper_top__21lXO\",\"right\":\"PopoverWrapper_right__YyJpv\",\"left\":\"PopoverWrapper_left__ouRAm\",\"triangle\":\"PopoverWrapper_triangle__1OdYD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Header_wrapper__3LlIc\",\"currentDate\":\"Header_currentDate__I8odQ\",\"title\":\"Header_title__wvhXO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Selector_wrapper__1Bzba\",\"buttons\":\"Selector_buttons__1zCrb\",\"stepper\":\"Selector_stepper__4VzX_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid\":\"Weekdays_grid__2ZV-z\",\"wrapper\":\"Weekdays_wrapper__3QHus\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Input_input__P_5e7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"datepickerWrapper\":\"DatepickerWrapper_datepickerWrapper__btUR3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"PopoverProvider_container__33AUu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"ModalWrapper_content__2KCKo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ModalProvider_container__29DOd\"};","const compose = (...fns) => (...args) =>\n  fns.reduceRight(\n    (params, f) => (Array.isArray(params) ? f(...params) : f(params)),\n    args\n  );\n\nexport default compose;\n","import React, {useReducer} from 'react';\n\nconst createStoreProvider = ({initialState, reducer, context}) => ({\n  // eslint-disable-next-line react/prop-types\n  children,\n}) => {\n  const {Provider} = context;\n  const [state, dispatch] = useReducer(reducer, initialState);\n  return <Provider value={{state, dispatch}}>{children}</Provider>;\n};\n\nexport default createStoreProvider;\n","import {createContext, useContext} from 'react';\n\nconst ModalContext = createContext({});\n\nexport const useModalContext = () => useContext(ModalContext);\n\nexport default ModalContext;\n","import {TOGGLE_DATEPICKER} from './actionTypes';\n\nexport const initialState = {\n  isVisible: false,\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case TOGGLE_DATEPICKER: {\n      const isVisible = action.payload;\n      return {\n        ...state,\n        isVisible,\n      };\n    }\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","import React from 'react';\nimport createStoreProvider from 'lib/store';\nimport ModalContext from './context';\nimport ModalReducer, {initialState} from './ModalReducer';\n\nexport const Provider = createStoreProvider({\n  initialState,\n  reducer: ModalReducer,\n  context: ModalContext,\n});\n\nconst withModalProvider = WrappedComponent => props => (\n  <Provider>\n    <WrappedComponent {...props} />\n  </Provider>\n);\n\nexport default withModalProvider;\n","export const TOGGLE_DATEPICKER = 'TOGGLE_DATEPICKER';\n","import {createContext, useContext} from 'react';\n\nconst DatepickerContext = createContext({});\n\nexport const useDatepickerContext = () => useContext(DatepickerContext);\n\nexport default DatepickerContext;\n","import {\n  SET_DATE,\n  SET_TODAY,\n  SET_PRECISION,\n  SET_VISIBILITY,\n} from './actionTypes';\n\nexport const initialState = {};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case SET_DATE: {\n      const {selectedTimestamp, precision} = action.payload;\n      return {\n        ...state,\n        selectedTimestamp,\n        precision: precision || state.precision,\n      };\n    }\n    case SET_VISIBILITY: {\n      const {visibleTimestamp} = action.payload;\n      return {\n        ...state,\n        visibleTimestamp,\n      };\n    }\n    case SET_TODAY: {\n      const {todayTimestamp} = action.payload;\n      return {\n        ...state,\n        todayTimestamp,\n      };\n    }\n    case SET_PRECISION: {\n      return {\n        ...state,\n        precision: action.payload,\n      };\n    }\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","import React from 'react';\nimport createStoreProvider from 'lib/store';\nimport DatepickerContext from './context';\nimport DatepickerReducer, {initialState} from './DatepickerReducer';\n\nexport const Provider = createStoreProvider({\n  initialState,\n  reducer: DatepickerReducer,\n  context: DatepickerContext,\n});\n\nconst withDatepickerProvider = WrappedComponent => props => (\n  <Provider>\n    <WrappedComponent {...props} />\n  </Provider>\n);\n\nexport default withDatepickerProvider;\n","export const SET_DATE = 'SET_DATE';\nexport const SET_VISIBILITY = 'SET_VISIBILITY';\nexport const SET_TODAY = 'SET_TODAY';\nexport const SET_PRECISION = 'SET_PRECISION';\n","import {useDatepickerContext} from './context';\n\nconst useHasInitialValues = () => {\n  const {\n    state: {selectedTimestamp, todayTimestamp, visibleTimestamp},\n  } = useDatepickerContext();\n  return !!selectedTimestamp && !!todayTimestamp && !!visibleTimestamp;\n};\n\nexport default useHasInitialValues;\n","import {\n  formatWithOptions,\n  isSameMonth,\n  isSameYear,\n  toDate,\n  getTime,\n  addMonths,\n  addDays,\n  addYears,\n  isWithinInterval,\n  isWeekend,\n  isSameDay,\n  getDate,\n  startOfMonth,\n  endOfMonth,\n} from 'date-fns/fp';\nimport compose from 'lib/utils/compose';\n\n/**\n * Unix timestamp\n * @typedef {number} UnixTimestamp\n */\n\n/**\n * Date union type may be Date or Unix timestamp\n * @typedef {(Date|UnixTimestamp)} DateUnion\n */\n\n/**\n * @function\n * @name formatDateWithLocale\n * @description Returns formatted date\n * @param {Object} options - Options object with locale\n * @param {string} pattern - Formatting pattern\n * @param {Date} date - Date object to apply format\n * @return {string} Formatted date\n */\nexport const formatDateWithLocale = formatWithOptions;\n\n/**\n * @function\n * @name checkIsSameMonth\n * @description Checks if two dates belong to the same month\n * @param {DateUnion} dateLeft - Date to check\n * @param {DateUnion} dateRight - Date to check\n * @return {boolean}\n */\nexport const checkIsSameMonth = isSameMonth;\n\n/**\n * @function\n * @name checkIsSameYear\n * @description Checks if two dates belong to the same year\n * @param {DateUnion} dateLeft - Date to check\n * @param {DateUnion} dateRight - Date to check\n * @return {boolean}\n */\nexport const checkIsSameYear = isSameYear;\n\n/**\n * @function\n * @name checkIsSameDay\n * @description Checks if two dates belong to the same day\n * @param {DateUnion} dateLeft - Date to check\n * @param {DateUnion} dateRight - Date to check\n * @return {boolean}\n */\nexport const checkIsSameDay = isSameDay;\n\n/**\n * @function\n * @name convertToTimestamp\n * @description Converts provided date to Unix timestamp\n * @param {Date} date - Date to convert\n * @return {UnixTimestamp} Unix timestamp\n */\nexport const convertToTimestamp = date => getTime(date);\n\n/**\n * @function\n * @name convertToDate\n * @description Converts provided Unix timestamp to Date object\n * @param {number} timestamp - Date to convert\n * @return {Date}\n */\nexport const convertToDate = timestamp => toDate(timestamp);\n\n/**\n * @function\n * @name convertToDayOfMonth\n * @description Converts provided Unix timestamp or Date to day of month number\n * @param {DateUnion} timestamp - Timestamp or Date to convert\n * @return {number} Day of the month\n */\nexport const convertToDayOfMonth = timestamp => getDate(timestamp);\n\n/**\n * @function\n * @name checkIsWithinInterval\n * @description Checks if date belongs to the interval\n * @typedef {Object} Interval\n * @property {Date} start - Start of interval\n * @property {Date} end - End of interval\n * @param {DateUnion} date - Date to check\n * @param {Interval} interval - Time range to check\n * @return {boolean}\n */\nexport const checkIsWithinInterval = isWithinInterval;\n\n/**\n * @function\n * @name checkIsWeekend\n * @description Checks if date belongs to the weekend\n * @param {DateUnion} date - Date to check\n * @return {boolean}\n */\nexport const checkIsWeekend = date => isWeekend(date);\n\n/**\n * @function\n * @name matchDatesWithPrecision\n * @description Checks if dates are the same with given precision, eg belong to same day|month|year\n * @param {string} precision - Date to check\n * @param {DateUnion} dateLeft - Date to check\n * @param {DateUnion} dateRight - Date to check\n * @return {boolean}\n */\nexport const matchDatesWithPrecision = (precision, dateLeft, dateRight) =>\n  ({\n    day: checkIsSameDay,\n    month: checkIsSameMonth,\n    year: checkIsSameYear,\n  }[precision](dateLeft, dateRight));\n\n/**\n * @function\n * @name ceilMonth\n * @description Gets end of month date\n * @param {DateUnion} date\n * @return {Date}\n */\nexport const ceilMonth = endOfMonth;\n\n/**\n * @function\n * @name floorMonth\n * @description Gets start of month date\n * @param {DateUnion} date\n * @return {Date}\n */\nexport const floorMonth = startOfMonth;\n\n/**\n * @function\n * @name addMonth\n * @description Adds months\n * @param {DateUnion} date - Date or Unix timestamp\n * @param {number} amount - Amount of months to add\n * @return {UnixTimestamp}\n */\nexport const addMonth = (date, amount) =>\n  compose(convertToTimestamp, addMonths)(amount, date);\n\n/**\n * @function\n * @name subMonth\n * @description Subtracts months\n * @param {DateUnion} date - Date or Unix timestamp\n * @param {number} amount - Amount of months to subtract\n * @return {UnixTimestamp}\n */\nexport const subMonth = (date, amount) =>\n  compose(convertToTimestamp, addMonths)(-amount, date);\n\n/**\n * @function\n * @name addDay\n * @description Adds days\n * @param {DateUnion} date - Date or Unix timestamp\n * @param {number} amount - Amount of days to add\n * @return {UnixTimestamp}\n */\nexport const addDay = (date, amount) =>\n  compose(convertToTimestamp, addDays)(amount, date);\n\n/**\n * @function\n * @name subDay\n * @description Subtracts days\n * @param {DateUnion} date - Date or Unix timestamp\n * @param {number} amount - Amount of days to subtract\n * @return {UnixTimestamp}\n */\nexport const subDay = (date, amount) =>\n  compose(convertToTimestamp, addDays)(-amount, date);\n\n/**\n * @function\n * @name addYear\n * @description Adds years\n * @param {DateUnion} date - Date or Unix timestamp\n * @param {number} amount - Amount of years to add\n * @return {UnixTimestamp}\n */\nexport const addYear = (date, amount) =>\n  compose(convertToTimestamp, addYears)(amount, date);\n\n/**\n * @function\n * @name subYear\n * @description Subtracts years\n * @param {DateUnion} date - Date or Unix timestamp\n * @param {number} amount - Amount of days to subtract\n * @return {UnixTimestamp}\n */\nexport const subYear = (date, amount) =>\n  compose(convertToTimestamp, addYears)(-amount, date);\n","import {convertToTimestamp} from 'lib/utils/dateUtils';\nimport {\n  SET_DATE,\n  SET_PRECISION,\n  SET_TODAY,\n  SET_VISIBILITY,\n} from './actionTypes';\nimport {useDatepickerContext} from './context';\n\nconst useDatepickerActions = () => {\n  const {dispatch} = useDatepickerContext();\n  return {\n    setDate: date => {\n      dispatch({\n        type: SET_DATE,\n        payload: {\n          selectedTimestamp: convertToTimestamp(date),\n        },\n      });\n    },\n    setToday: date => {\n      dispatch({\n        type: SET_TODAY,\n        payload: {\n          todayTimestamp: convertToTimestamp(date),\n        },\n      });\n    },\n    setVisibility: date => {\n      dispatch({\n        type: SET_VISIBILITY,\n        payload: {\n          visibleTimestamp: convertToTimestamp(date),\n        },\n      });\n    },\n    setPrecision: precision => {\n      dispatch({\n        type: SET_PRECISION,\n        payload: precision,\n      });\n    },\n  };\n};\n\nexport default useDatepickerActions;\n","import {useEffect} from 'react';\nimport useHasInitialValues from './useHasInitialValues';\nimport useDatepickerActions from './actionCreators';\n\nexport const useSetInitialValues = ({initialDate, today, minPrecision}) => {\n  const {\n    setPrecision,\n    setVisibility,\n    setDate,\n    setToday,\n  } = useDatepickerActions();\n\n  const hasInitialValues = useHasInitialValues();\n  useEffect(() => {\n    if (!hasInitialValues) {\n      setDate(initialDate);\n      setVisibility(initialDate);\n      setToday(today);\n      setPrecision(minPrecision);\n    }\n  }, [\n    hasInitialValues,\n    initialDate,\n    minPrecision,\n    setDate,\n    setPrecision,\n    setToday,\n    setVisibility,\n    today,\n  ]);\n};\n","function curry(fn) {\n  const curried = (...args) => {\n    if (args.length >= fn.length) {\n      return fn.apply(this, args);\n    }\n    return (...args2) => curried.apply(this, args.concat(args2));\n  };\n  return curried;\n}\n\nexport default curry;\n","import {\n  startOfYear,\n  getYear,\n  addYears,\n  addDays,\n  toDate,\n  differenceInDays,\n  endOfWeekWithOptions,\n  startOfWeekWithOptions,\n  getDate,\n} from 'date-fns/fp';\nimport {addMonth, ceilMonth, floorMonth} from 'lib/utils/dateUtils';\nimport curry from 'lib/utils/curry';\n\n/**\n * Item name\n * @typedef {Object} ItemName\n * @property {string} [narrow] - Narrow name of item - 'S'\n * @property {string} [short] - Short name of item - 'Su'\n * @property {string} [abbreviated] - Abbreviated name of item - 'Sun'\n * @property {string} [wide] - Full name of item - 'Sunday'\n * @property {number} [numeric] - Numeric name of item - 1\n */\n\n/**\n * Item description\n * @typedef {Object} ItemDescription\n * @property {ItemName} name - Item name vocabulary\n * @property {Date} date - starting date of the item\n */\n\n/**\n * Date union type may be Date or Unix timestamp\n * @typedef {(Date|number)} DateUnion\n */\n\n/**\n * @function\n * @name getWeekDayNames\n * @description Returns array of weekday names\n * @param {Object} locale - Locale object\n * @return {Array.<ItemName>}\n */\nexport const getWeekDayNames = locale =>\n  [...Array(7).keys()].map(i => {\n    const dayNumber =\n      i + locale.options.weekStartsOn === 7\n        ? 0\n        : i + locale.options.weekStartsOn;\n    return {\n      short: locale.localize.day(dayNumber, {width: 'short'}),\n      narrow: locale.localize.day(dayNumber, {width: 'narrow'}),\n      abbreviated: locale.localize.day(dayNumber, {width: 'abbreviated'}),\n      wide: locale.localize.day(dayNumber, {width: 'wide'}),\n      numeric: i,\n    };\n  });\n\n/**\n * @function\n * @name getYears\n * @description Returns collection year description objects in the provided range\n * @param {DateUnion} startDate - Start date\n * @param {DateUnion} endDate - End date\n * @return {Array.<ItemDescription>}\n */\nconst getYears = (startDate, endDate) => {\n  const startYear = getYear(startDate);\n  const endYear = getYear(endDate) + 1;\n  const years = [...Array(endYear - startYear).keys()];\n  return years.map((year, i) => ({\n    name: {\n      numeric: startYear + i,\n    },\n    date: addYears(i, startDate),\n  }));\n};\n\nconst getYearsCurried = curry(getYears);\n\nexport {getYearsCurried as getYears};\n\n/**\n * @function\n * @name getMonths\n * @description Returns collection of month description objects based on provided date\n * @param {Object} locale - Locale object\n * @param {DateUnion} date - Date or Unix timestamp\n * @return {Array.<ItemDescription>}\n */\nconst getMonths = (locale, date) => {\n  const year = startOfYear(date);\n  const monthNames = [...Array(12).keys()].map(i => ({\n    wide: locale.localize.month(i, {width: 'wide'}),\n    abbreviated: locale.localize.month(i, {width: 'abbreviated'}),\n    narrow: locale.localize.month(i, {width: 'narrow'}),\n    numeric: i,\n  }));\n  return monthNames.map((name, i) => ({\n    name,\n    date: toDate(addMonth(year, i)),\n  }));\n};\n\nconst getMonthsCurried = curry(getMonths);\n\nexport {getMonthsCurried as getMonths};\n\n/**\n * @function\n * @name getDays\n * @description Returns collection of day description objects based on provided date\n * @param {Object} locale - Locale object\n * @param {DateUnion} timestamp - Unix timestamp or Date object\n * @return {Array.<ItemDescription>}\n */\nconst getDays = (locale, timestamp) => {\n  const monthStart = floorMonth(timestamp);\n  const monthEnd = ceilMonth(monthStart);\n  const startDate = startOfWeekWithOptions({locale}, monthStart);\n  const endDate = endOfWeekWithOptions({locale}, monthEnd);\n  const cellLength = differenceInDays(startDate, endDate);\n  return new Array(cellLength + 1).fill('').map((_, i) => ({\n    date: addDays(i, startDate),\n    name: {\n      numeric: getDate(addDays(i, startDate)),\n    },\n  }));\n};\n\nconst getDaysCurried = curry(getDays);\n\nexport {getDaysCurried as getDays};\n","import React, {useContext} from 'react';\nimport PropTypes from 'prop-types';\nimport defaultLocale from 'date-fns/locale/en-US';\n\nconst LocaleContext = React.createContext({});\n\nexport const useLocaleContext = () => useContext(LocaleContext);\n\nexport const Provider = ({children, dateFnsLocale}) => (\n  <LocaleContext.Provider value={dateFnsLocale}>\n    {children}\n  </LocaleContext.Provider>\n);\n\nProvider.propTypes = {\n  dateFnsLocale: PropTypes.shape({}),\n  children: PropTypes.element.isRequired,\n};\nProvider.defaultProps = {\n  dateFnsLocale: defaultLocale,\n};\n\nconst withLocaleContext = WrappedComponent => ({\n  // eslint-disable-next-line react/prop-types\n  dateFnsLocale,\n  ...restProps\n}) => (\n  <Provider dateFnsLocale={dateFnsLocale}>\n    <WrappedComponent {...restProps} />\n  </Provider>\n);\n\nexport default withLocaleContext;\n","import {getWeekDayNames} from 'lib/utils/enumerators';\nimport {useLocaleContext} from './withLocaleContext';\n\nconst useWeekDayNames = () => {\n  const locale = useLocaleContext();\n  return getWeekDayNames(locale);\n};\n\nexport default useWeekDayNames;\n","import {getYears, getMonths, getDays} from 'lib/utils/enumerators';\nimport {useLocaleContext} from './withLocaleContext';\n\nconst useLocaleEnumerators = precision => {\n  const locale = useLocaleContext();\n  return {\n    day: getDays(locale),\n    month: getMonths(locale),\n    year: getYears,\n  }[precision];\n};\n\nexport default useLocaleEnumerators;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classes from './Day.module.css';\n\nconst DayGrid = ({children, className}) => (\n  <div className={className || classes.grid}>{children}</div>\n);\n\nDayGrid.propTypes = {\n  children: PropTypes.node.isRequired,\n  className: PropTypes.string.isRequired,\n};\n\nexport default DayGrid;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classes from './Month.module.css';\n\nconst MonthGrid = ({children, className}) => (\n  <div className={className || classes.grid} role=\"grid\">\n    {children}\n  </div>\n);\n\nMonthGrid.propTypes = {\n  className: PropTypes.string.isRequired,\n  children: PropTypes.node.isRequired,\n};\n\nexport default MonthGrid;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classes from './Year.module.css';\n\nconst YearGrid = ({children, className}) => (\n  <div className={classes.scrollContainer}>\n    <div className={className || classes.grid}>{children}</div>\n  </div>\n);\n\nYearGrid.propTypes = {\n  children: PropTypes.node.isRequired,\n  className: PropTypes.string.isRequired,\n};\n\nexport default YearGrid;\n","import {useCallback} from 'react';\nimport {\n  ceilMonth,\n  checkIsSameMonth,\n  checkIsWeekend,\n  checkIsWithinInterval,\n  floorMonth,\n  matchDatesWithPrecision,\n} from 'lib/utils/dateUtils';\n\nconst useLogic = ({\n  disableDate,\n  endDate,\n  precision,\n  startDate,\n  highlightDate,\n  onDateSet,\n  highlightWeekends,\n  visibleTimestamp,\n  selectedTimestamp,\n  todayTimestamp,\n}) => {\n  const getIsDisabled = useCallback(\n    date => {\n      if (precision === 'year') return false; // we are not disabling years, just rendering the range\n      if (precision === 'month') {\n        return !checkIsWithinInterval(\n          {start: floorMonth(startDate), end: ceilMonth(endDate)},\n          date\n        );\n      }\n      return (\n        disableDate({date, isWeekend: checkIsWeekend(date), precision}) ||\n        !checkIsWithinInterval({start: startDate, end: endDate}, date)\n      );\n    },\n    [disableDate, endDate, precision, startDate]\n  );\n\n  const getIsHighlighted = useCallback(\n    date => highlightDate({date, isWeekend: checkIsWeekend(date), precision}),\n    [highlightDate, precision]\n  );\n\n  const handleDateSet = useCallback(\n    date => {\n      const isDisabled = getIsDisabled(date);\n      !isDisabled && onDateSet(date);\n    },\n    [getIsDisabled, onDateSet]\n  );\n\n  const getIsWeekend = date =>\n    precision === 'day' && highlightWeekends && checkIsWeekend(date);\n\n  const getBelongsToSameMonth = date =>\n    precision === 'day' && checkIsSameMonth(date, visibleTimestamp);\n\n  const getIsSelected = date =>\n    matchDatesWithPrecision(precision, date, selectedTimestamp);\n\n  const getIsCurrent = date =>\n    matchDatesWithPrecision(precision, date, todayTimestamp);\n\n  return {\n    getIsDisabled,\n    getIsHighlighted,\n    handleDateSet,\n    getIsWeekend,\n    getBelongsToSameMonth,\n    getIsSelected,\n    getIsCurrent,\n  };\n};\n\nexport default useLogic;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport config from 'lib/utils/config';\nimport {useLocaleEnumerators} from 'lib/features/locale';\nimport {DayGrid} from 'lib/components/visual/Day';\nimport {MonthGrid} from 'lib/components/visual/Month';\nimport {YearGrid} from 'lib/components/visual/Year';\nimport useLogic from './useLogic';\n\nconst Calendar = ({\n  onDateSet,\n  wrapperClassName,\n  todayTimestamp,\n  selectedTimestamp,\n  visibleTimestamp,\n  renderAs,\n  precision,\n  startDate,\n  endDate,\n  disableDate,\n  highlightDate,\n  highlightWeekends,\n}) => {\n  const getItems = useLocaleEnumerators(precision);\n  const items =\n    precision === 'year'\n      ? getItems(startDate, endDate)\n      : getItems(visibleTimestamp);\n\n  const {\n    getIsDisabled,\n    getIsHighlighted,\n    handleDateSet,\n    getIsWeekend,\n    getBelongsToSameMonth,\n    getIsSelected,\n    getIsCurrent,\n  } = useLogic({\n    disableDate,\n    endDate,\n    precision,\n    startDate,\n    highlightDate,\n    onDateSet,\n    highlightWeekends,\n    visibleTimestamp,\n    selectedTimestamp,\n    todayTimestamp,\n  });\n\n  const Wrapper = {\n    day: DayGrid,\n    month: MonthGrid,\n    year: YearGrid,\n  }[precision];\n\n  const VisualComponent = renderAs;\n  return (\n    <Wrapper className={wrapperClassName}>\n      {items.map(({name, date}) => (\n        <VisualComponent\n          isWeekend={getIsWeekend(date)}\n          onDateSet={handleDateSet}\n          isSelected={getIsSelected(date)}\n          isCurrent={getIsCurrent()}\n          belongsToSameMonth={getBelongsToSameMonth(date)}\n          isDisabled={getIsDisabled(date)}\n          isHighlighted={getIsHighlighted(date)}\n          name={name}\n          date={date}\n          key={date}\n        />\n      ))}\n    </Wrapper>\n  );\n};\n\nCalendar.propTypes = {\n  precision: PropTypes.oneOf(config.supportedPrecisions).isRequired,\n  wrapperClassName: PropTypes.string.isRequired,\n  renderAs: PropTypes.elementType.isRequired,\n  onDateSet: PropTypes.func.isRequired,\n  todayTimestamp: PropTypes.number.isRequired,\n  selectedTimestamp: PropTypes.number.isRequired,\n  visibleTimestamp: PropTypes.number.isRequired,\n  startDate: PropTypes.instanceOf(Date).isRequired,\n  endDate: PropTypes.instanceOf(Date).isRequired,\n  disableDate: PropTypes.func.isRequired,\n  highlightDate: PropTypes.func.isRequired,\n  highlightWeekends: PropTypes.bool,\n};\n\nCalendar.defaultProps = {\n  highlightWeekends: false,\n};\n\nexport default Calendar;\n","import {formatDistanceStrictWithOptions} from 'date-fns/fp';\nimport {useLocaleContext} from './withLocaleContext';\n\nconst useMonthStepperLabels = () => {\n  const locale = useLocaleContext();\n  const incrementMonthLabel = formatDistanceStrictWithOptions(\n    {locale, addSuffix: true},\n    new Date(2020, 0, 1),\n    new Date(2020, 1, 1)\n  );\n  const decrementMonthLabel = formatDistanceStrictWithOptions(\n    {locale, addSuffix: true},\n    new Date(2020, 1, 1),\n    new Date(2020, 0, 1)\n  );\n  return {\n    incrementMonthLabel,\n    decrementMonthLabel,\n  };\n};\n\nexport default useMonthStepperLabels;\n","import {useCallback} from 'react';\nimport {\n  ceilMonth,\n  checkIsWithinInterval,\n  subMonth,\n  floorMonth,\n  addMonth,\n} from 'lib/utils/dateUtils';\nimport {useDatepickerActions} from 'lib/features/datepicker';\n\nconst useLogic = ({startDate, endDate, visibleTimestamp}) => {\n  const {setVisibility, setPrecision} = useDatepickerActions();\n\n  const isAvailable = useCallback(\n    date =>\n      checkIsWithinInterval(\n        {start: floorMonth(startDate), end: ceilMonth(endDate)},\n        date\n      ),\n    [endDate, startDate]\n  );\n\n  const onSetPrecision = useCallback(\n    nextPrecision => {\n      setPrecision(nextPrecision);\n    },\n    [setPrecision]\n  );\n\n  const onIncrementMonth = useCallback(() => {\n    const nextDate = addMonth(visibleTimestamp, 1);\n    isAvailable(nextDate) && setVisibility(nextDate);\n  }, [isAvailable, setVisibility, visibleTimestamp]);\n\n  const onDecrementMonth = useCallback(() => {\n    const nextDate = subMonth(visibleTimestamp, 1);\n    isAvailable(nextDate) && setVisibility(nextDate);\n  }, [isAvailable, setVisibility, visibleTimestamp]);\n\n  return {onSetPrecision, onIncrementMonth, onDecrementMonth};\n};\n\nexport default useLogic;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {convertToDate} from 'lib/utils/dateUtils';\nimport {useMonthStepperLabels} from 'lib/features/locale';\nimport useLogic from './useLogic';\n\nconst Selector = ({\n  todayTimestamp,\n  selectedTimestamp,\n  renderAs,\n  startDate,\n  endDate,\n  visibleTimestamp,\n  precision,\n}) => {\n  const monthStepperLabels = useMonthStepperLabels();\n\n  const {onSetPrecision, onIncrementMonth, onDecrementMonth} = useLogic({\n    startDate,\n    endDate,\n    visibleTimestamp,\n  });\n\n  const SelectorVisual = renderAs;\n  return (\n    <SelectorVisual\n      precision={precision}\n      monthStepperLabels={monthStepperLabels}\n      incrementMonth={onIncrementMonth}\n      decrementMonth={onDecrementMonth}\n      setPrecision={onSetPrecision}\n      todayDate={convertToDate(todayTimestamp)}\n      selectedDate={convertToDate(selectedTimestamp)}\n      visibleDate={convertToDate(visibleTimestamp)}\n    />\n  );\n};\n\nSelector.propTypes = {\n  selectedTimestamp: PropTypes.number.isRequired,\n  todayTimestamp: PropTypes.number.isRequired,\n  visibleTimestamp: PropTypes.number.isRequired,\n  renderAs: PropTypes.elementType.isRequired,\n  startDate: PropTypes.instanceOf(Date).isRequired,\n  endDate: PropTypes.instanceOf(Date).isRequired,\n  precision: PropTypes.oneOf(['year', 'month', 'day']).isRequired,\n};\n\nexport default Selector;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {useDatepickerContext} from 'lib/features/datepicker';\nimport {convertToDate} from 'lib/utils/dateUtils';\n\nconst Header = ({renderAs, title}) => {\n  const {\n    state: {selectedTimestamp, todayTimestamp},\n  } = useDatepickerContext();\n  const HeaderUI = renderAs;\n  return (\n    <HeaderUI\n      selectedDate={convertToDate(selectedTimestamp)}\n      todayDate={convertToDate(todayTimestamp)}\n      title={title}\n    />\n  );\n};\n\nHeader.propTypes = {\n  renderAs: PropTypes.elementType.isRequired,\n  title: PropTypes.string.isRequired,\n};\n\nexport default Header;\n","const baseColor = '#43a047';\nconst gray = 'rgba(0, 0, 0, 0.38)';\nconst borderRadius = '4px';\n\nconst defaultTheme = {\n  /** Set font for datepicker */\n  fontPrimary: 'Helvetica Neue',\n  /** Font, which is applied, if --fontPrimary is not available */\n  fontSecondary: 'Arial',\n  /** Fallback font if two previous are unavailable */\n  fontFallback: 'sans-serif',\n  fontSize: '14px',\n  fontWeight: '400',\n  /** Applied to the title */\n  fontSizeSmall: '10px',\n  /** Applied to the header text */\n  fontSizeBig: '24px',\n  /** Set inner width */\n  calendarWidth: '240px',\n  /** Calculate total width */\n  datePickerWidth: 'calc(var(--calendarWidth) + var(--innerPadding) * 2)',\n  selectorHeight: '36px',\n  calendarHeight: '200px',\n  /** Set padding between elements */\n  innerPadding: '12px',\n  /** Day, month, year entries height */\n  entryHeight: '32px',\n  entryMargin: '1px',\n  datepickerBorderRadius: borderRadius,\n  entryBorderRadius: borderRadius,\n  /** Background color of Calendar */\n  bgColor: 'white',\n  /** Base color for text */\n  textColor: 'black',\n  headerBgColor: baseColor,\n  weekendTextColor: 'red',\n  headerTextColor: 'white',\n  borderColor: gray,\n  modalBgColor: gray,\n  weekDayColor: gray,\n  entryHoverColor: 'rgba(0, 0, 0, 0.08)',\n  entrySelectedColor: baseColor,\n  entryHighlightColor: 'lightblue',\n  inputWidth: '90px',\n  inputPadding: '8px',\n  inputBorderRadius: borderRadius,\n  inputBorderColor: gray,\n  inputHighlightColor: 'lightblue',\n};\n\nexport default defaultTheme;\n","import React, {useContext} from 'react';\nimport PropTypes from 'prop-types';\n\nconst ThemeContext = React.createContext({});\n\nexport const useThemeContext = () => useContext(ThemeContext);\n\nexport const Provider = ({children, theme}) => (\n  <ThemeContext.Provider value={theme}>{children}</ThemeContext.Provider>\n);\n\nProvider.propTypes = {\n  theme: PropTypes.shape({}),\n  children: PropTypes.element.isRequired,\n};\nProvider.defaultProps = {\n  theme: {},\n};\n\n// eslint-disable-next-line react/prop-types\nconst withTheme = WrappedComponent => ({theme, ...restProps}) => (\n  <Provider theme={theme}>\n    <WrappedComponent {...restProps} />\n  </Provider>\n);\n\nexport default withTheme;\n","import {useTheme} from 'css-vars-hook';\nimport defaults from 'lib/utils/defaultTheme';\nimport {useThemeContext} from './withTheme';\n\n/** @function\n * @name useTheme\n * @description React hook. Sets css variables from Context and defaultTheme\n * @param {Object.<string, string>} [defaultTheme=defaults] Default theme to override with context values\n * @return {[Object, Function]}\n */\nconst useThemeFeature = (defaultTheme = defaults) => {\n  const propsTheme = useThemeContext();\n  const mergedTheme = {\n    ...defaultTheme,\n    ...propsTheme,\n  };\n  const {ref, setRef, style} = useTheme(mergedTheme);\n  return {ref, setRef, style};\n};\n\nexport default useThemeFeature;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {useTheme} from 'lib/features/theme';\nimport classes from './DatepickerWrapper.module.css';\n\nconst DatepickerWrapper = ({title, children, className}) => {\n  const {setRef, style} = useTheme();\n  return (\n    <div\n      style={style}\n      ref={setRef}\n      className={className}\n      aria-label={title}\n      role=\"dialog\">\n      {children}\n    </div>\n  );\n};\n\nDatepickerWrapper.propTypes = {\n  children: PropTypes.node.isRequired,\n  /** Title of the component, used for accessibility reasons */\n  title: PropTypes.string.isRequired,\n  className: PropTypes.string,\n};\n\nDatepickerWrapper.defaultProps = {\n  className: classes.datepickerWrapper,\n};\n\nexport default DatepickerWrapper;\n","import {formatDateWithLocale} from 'lib/utils/dateUtils';\nimport {useLocaleContext} from './withLocaleContext';\n\nconst useFormatDate = () => {\n  const locale = useLocaleContext();\n  return formatDateWithLocale({locale});\n};\n\nexport default useFormatDate;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {useFormatDate} from 'lib/features/locale';\nimport classes from './Header.module.css';\n\nconst Header = ({selectedDate, title, todayDate}) => {\n  /**\n   * Returns formatted date\n   * @param {string} pattern - Formatting pattern\n   * @param {Date} date - Date object to apply format\n   * @return {string} Formatted date\n   */\n  const formatDate = useFormatDate();\n  return (\n    <div className={classes.wrapper}>\n      <div className={classes.title}>{title}</div>\n      <div aria-live=\"polite\" className={classes.currentDate}>\n        {formatDate('MMM do', selectedDate)}\n      </div>\n    </div>\n  );\n};\n\nHeader.propTypes = {\n  /** Set today date. */\n  todayDate: PropTypes.instanceOf(Date).isRequired, // eslint-disable-line react/no-unused-prop-types\n  /** Set selected date. */\n  selectedDate: PropTypes.instanceOf(Date).isRequired, // eslint-disable-line react/no-unused-prop-types\n  /** Set title of datepicker. */\n  title: PropTypes.string.isRequired,\n};\n\nexport default Header;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {useFormatDate} from 'lib/features/locale';\nimport classes from './Selector.module.css';\n\nconst Selector = ({\n  selectedDate,\n  todayDate,\n  setPrecision,\n  decrementMonth,\n  incrementMonth,\n  precision,\n  monthStepperLabels,\n  visibleDate,\n}) => {\n  const formatDate = useFormatDate();\n  const year = formatDate('y', visibleDate);\n  const month = formatDate('LLLL', visibleDate);\n  return (\n    <div className={classes.wrapper}>\n      {/** Render precision selectors */}\n      <div className={classes.buttons}>\n        <button\n          onClick={() => {\n            setPrecision('year');\n          }}\n          aria-live=\"polite\"\n          type=\"button\">\n          {year}\n        </button>\n        {/** Render month precision selector, only if minPrecision is not `year`  */}\n        {precision !== 'year' && (\n          <button\n            onClick={() => {\n              setPrecision('month');\n            }}\n            aria-live=\"polite\"\n            type=\"button\">\n            {month}\n          </button>\n        )}\n      </div>\n      {/** Render month stepper, only if minPrecision is not `year` */}\n      {precision === 'day' && (\n        <div className={classes.stepper}>\n          <button\n            onClick={() => {\n              decrementMonth();\n            }}\n            aria-label={monthStepperLabels.decrementMonthLabel}\n            type=\"button\">\n            ⟨\n          </button>\n          <button\n            onClick={() => {\n              incrementMonth();\n            }}\n            aria-label={monthStepperLabels.incrementMonthLabel}\n            type=\"button\">\n            ⟩\n          </button>\n        </div>\n      )}\n    </div>\n  );\n};\n\nSelector.propTypes = {\n  /** Method which sets precision for Calendar shown below, e.g. `setPrecision('month')`. */\n  setPrecision: PropTypes.func.isRequired,\n  /** Method which __adds 1 month__ to selected date for Calendar and Header components, e.g. `incrementMonth(selectedDate)`. */\n  incrementMonth: PropTypes.func.isRequired,\n  /** Method which __subtracts 1 month__ from selected date for Calendar and Header components, e.g. `incrementMonth(selectedDate)`. */\n  decrementMonth: PropTypes.func.isRequired,\n  /** Selected date of Calendar */\n  selectedDate: PropTypes.instanceOf(Date).isRequired,\n  /** Defines visibility of dates, displayed in current Calendar */\n  visibleDate: PropTypes.instanceOf(Date).isRequired,\n  /** Today date */\n  todayDate: PropTypes.instanceOf(Date).isRequired,\n  /** Set minimum precision (measuring unit) of calendar. Possible values: 'day', 'month', 'year'. */\n  precision: PropTypes.oneOf(['year', 'month', 'day']).isRequired,\n  /** Localized accessibility labels for __month stepper__ */\n  monthStepperLabels: PropTypes.shape({\n    /** +1 month */\n    incrementMonthLabel: PropTypes.string.isRequired,\n    /** -1 month */\n    decrementMonthLabel: PropTypes.string.isRequired,\n  }).isRequired,\n};\n\nexport default Selector;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport {useFormatDate} from 'lib/features/locale';\nimport classes from './Day.module.css';\n\nconst Day = ({\n  onDateSet,\n  date,\n  belongsToSameMonth,\n  isCurrent,\n  isSelected,\n  isDisabled,\n  isHighlighted,\n  isWeekend,\n  name,\n}) => {\n  /**\n   * Returns formatted date\n   * @param {string} pattern - Formatting pattern\n   * @param {Date} date - Date object to apply format\n   * @return {string} Formatted date\n   */\n  const formatDate = useFormatDate();\n  const handleClick = () => {\n    onDateSet(date);\n  };\n  return belongsToSameMonth ? (\n    <div\n      tabIndex={isDisabled ? '-1' : '0'}\n      role=\"button\"\n      onClick={handleClick}\n      onKeyDown={handleClick}\n      className={classNames({\n        [classes.wrapper]: true,\n        /** Conditional class to display, if day is today */\n        [classes.isCurrent]: isCurrent,\n        /** Conditional class to display, if day is selected */\n        [classes.isSelected]: isSelected,\n        /** Conditional class to display, if day is disabled */\n        [classes.isDisabled]: isDisabled,\n        /** Conditional class to display, if day is weekend */\n        [classes.isWeekend]: isWeekend,\n        /** Conditional class to display, if day is highlighted */\n        [classes.isHighlighted]: isHighlighted,\n      })}\n      aria-disabled={isDisabled}\n      aria-label={formatDate('do LLLL EEEE', date)}>\n      {name.numeric}\n    </div>\n  ) : (\n    <div className={classes.placeholder} />\n  );\n};\n\nDay.propTypes = {\n  /** Flag, showing if this day entry and selected date __belong to the same month__. */\n  belongsToSameMonth: PropTypes.bool.isRequired,\n  /** Flag, showing if this day entry is __selected__. */\n  isSelected: PropTypes.bool.isRequired,\n  /** Flag, showing if this day entry is __disabled__. */\n  isDisabled: PropTypes.bool.isRequired,\n  /** Flag, showing if this day entry is __highlighted__. */\n  isHighlighted: PropTypes.bool.isRequired,\n  /** Flag, showing if this day entry is __weekend__. */\n  isWeekend: PropTypes.bool.isRequired,\n  /** Function to set date for Calendar, e. g. `onDateSet(date)`. */\n  onDateSet: PropTypes.func.isRequired,\n  /** Date for this day entry */\n  date: PropTypes.instanceOf(Date).isRequired,\n  /** Flag, showing if this day entry is __today__. */\n  isCurrent: PropTypes.bool.isRequired,\n  /** Object, which has `numeric` property with day number. */\n  name: PropTypes.shape({\n    numeric: PropTypes.number.isRequired,\n  }).isRequired,\n};\n\nexport default Day;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport classes from './Month.module.css';\n\nconst Month = ({\n  onDateSet,\n  date,\n  isDisabled,\n  isCurrent,\n  isSelected,\n  name,\n  isHighlighted,\n}) => {\n  const handleClick = () => {\n    onDateSet(date);\n  };\n  return (\n    <div\n      tabIndex={isDisabled ? '-1' : '0'}\n      role=\"button\"\n      onClick={handleClick}\n      onKeyPress={handleClick}\n      className={classNames({\n        [classes.wrapper]: true,\n        /** Conditional class to display, if month is selected */\n        [classes.isSelected]: isSelected,\n        /** Conditional class to display, if month is disabled */\n        [classes.isDisabled]: isDisabled,\n        /** Conditional class to display, if month belongs to same month as today */\n        [classes.isCurrent]: isCurrent,\n        /** Conditional class to display, if month is highlighted */\n        [classes.isHighlighted]: isHighlighted,\n      })}\n      aria-disabled={isDisabled}\n      aria-label={name.wide}>\n      {name.abbreviated}\n    </div>\n  );\n};\n\nMonth.propTypes = {\n  /** Flag, showing if this month entry is __disabled__. */\n  isDisabled: PropTypes.bool.isRequired,\n  /** Flag, showing if this month entry is __highlighted__. */\n  isHighlighted: PropTypes.bool.isRequired,\n  /** Flag, showing if this month entry is __selected__. */\n  isSelected: PropTypes.bool.isRequired,\n  /** Function to set date for Calendar, e. g. `onDateSet(date)`. */\n  onDateSet: PropTypes.func.isRequired,\n  /** Date for this month entry */\n  date: PropTypes.instanceOf(Date).isRequired,\n  /** Flag, showing if this month entry and current date __belong to the same month__. */\n  isCurrent: PropTypes.bool.isRequired,\n  /** Object containing month name localized in different forms */\n  name: PropTypes.shape({\n    /** 'enero', 'febrero', 'marzo', 'abril', 'mayo', 'junio', 'julio', 'agosto', 'septiembre', 'octubre', 'noviembre', 'diciembre' */\n    wide: PropTypes.string.isRequired,\n    /** 'ene.', 'feb.', 'mar.', 'abr.', 'may.', 'jun.', 'jul.', 'ago.', 'sep.', 'oct.', 'nov.', 'dic.' */\n    abbreviated: PropTypes.string.isRequired,\n    /** 'E', 'F', 'M', 'A', 'M', 'J', 'J', 'A', 'S', 'O', 'N', 'D' */\n    narrow: PropTypes.string.isRequired,\n    /** 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11 */\n    numeric: PropTypes.number.isRequired,\n  }).isRequired,\n};\n\nexport default Month;\n","const isInViewport = elem => {\n  const distance = elem.getBoundingClientRect();\n  return (\n    distance.top >= 0 &&\n    distance.left >= 0 &&\n    distance.bottom <=\n      (window.innerHeight || document.documentElement.clientHeight) &&\n    distance.right <=\n      (window.innerWidth || document.documentElement.clientWidth)\n  );\n};\n\nexport default isInViewport;\n","const scrollStop = callback => {\n  let isScrolling;\n  window.addEventListener(\n    'scroll',\n    () => {\n      window.clearTimeout(isScrolling);\n      // eslint-disable-next-line fp/no-mutation\n      isScrolling = setTimeout(() => {\n        callback();\n      }, 66);\n    },\n    false\n  );\n};\n\nexport default scrollStop;\n","const noScroll = () => {\n  const x = window.scrollX;\n  const y = window.scrollY;\n  window.scrollTo(x, y);\n};\n\nexport default noScroll;\n","import {useEffect} from 'react';\nimport isInViewport from './isInViewport';\nimport scrollStop from './scrollStop';\nimport noScroll from './noScroll';\n\n/**\n * @function\n * @name useScrollIntoView\n * @description React hook. Scrolls element into viewport if parent container is visible.\n * @param {Object} ref - React ref\n * @param {string} containerSelector - Selector of containing element: '.className'\n * @param {Boolean} condition - Condition flag\n * @return {void}\n */\nconst useScrollIntoView = (ref = {}, containerSelector, condition) => {\n  useEffect(() => {\n    const element = ref.current;\n    const container = element && element.closest(containerSelector);\n\n    if (element && condition && container) {\n      container.addEventListener(\n        'scroll',\n        event => {\n          window.addEventListener('scroll', noScroll);\n        },\n        false\n      );\n      scrollStop(() => {\n        window.removeEventListener('scroll', noScroll);\n      });\n      isInViewport(container) &&\n        element.scrollIntoView({\n          block: 'nearest',\n          inline: 'nearest',\n        });\n    }\n    return () => {\n      window.removeEventListener('scroll', noScroll);\n    };\n  }, [condition, containerSelector, ref]);\n};\n\nexport default useScrollIntoView;\n","import React, {useRef} from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport useScrollIntoView from 'lib/utils/scrollIntoView';\nimport classes from './Year.module.css';\n\nconst Year = ({\n  isHighlighted,\n  onDateSet,\n  date,\n  isSelected,\n  isCurrent,\n  name,\n}) => {\n  const ref = useRef();\n  const handleClick = () => {\n    onDateSet(date);\n  };\n  useScrollIntoView(ref, `.${classes.scrollContainer}`, isSelected);\n  return (\n    <div\n      ref={ref}\n      tabIndex=\"0\"\n      role=\"button\"\n      onClick={handleClick}\n      onKeyPress={handleClick}\n      className={classNames({\n        [classes.wrapper]: true,\n        /** Conditional class to display, if year belongs to same year as today */\n        [classes.isCurrent]: isCurrent,\n        /** Conditional class to display, if year is selected */\n        [classes.isSelected]: isSelected,\n        /** Conditional class to display, if year is highlighted */\n        [classes.isHighlighted]: isHighlighted,\n      })}\n      aria-label={name.numeric}>\n      {name.numeric}\n    </div>\n  );\n};\n\nYear.propTypes = {\n  /** Flag, showing if this year entry is __selected__. */\n  isSelected: PropTypes.bool.isRequired,\n  /** Flag, showing if this year entry is __highlighted__. */\n  isHighlighted: PropTypes.bool.isRequired,\n  /** Function to set date for Calendar, e. g. `onDateSet(date)`. */\n  onDateSet: PropTypes.func.isRequired,\n  /** Date for this year entry */\n  date: PropTypes.instanceOf(Date).isRequired,\n  /** Flag, showing if this month entry and current date __belong to the same year__. */\n  isCurrent: PropTypes.bool.isRequired,\n  /** Object, which has `numeric` property with current year number. */\n  name: PropTypes.shape({\n    numeric: PropTypes.number.isRequired,\n  }).isRequired,\n};\n\nexport default Year;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classes from './Weekdays.module.css';\n\nconst Weekdays = ({names}) => (\n  <div className={classes.grid} role=\"presentation\">\n    {names.map(name => (\n      <div key={name.short} className={classes.wrapper} aria-label={name.wide}>\n        {name.short}\n      </div>\n    ))}\n  </div>\n);\n\nWeekdays.propTypes = {\n  /** Object containing weekday name localized in different forms */\n  names: PropTypes.arrayOf(\n    PropTypes.shape({\n      /** 'su', 'mo', 'tu', 'we', 'th', 'fr', 'sa' */\n      short: PropTypes.string.isRequired,\n      /** 's', 'm', 't', 'w', 't', 'f', 's' */\n      narrow: PropTypes.string.isRequired,\n      /** 'Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat' */\n      abbreviated: PropTypes.string.isRequired,\n      /** 'Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday' */\n      wide: PropTypes.string.isRequired,\n      /** 0, 1, 2, 3, 4, 5, 6 */\n      numeric: PropTypes.number.isRequired,\n    }).isRequired\n  ).isRequired,\n};\n\nexport default Weekdays;\n","export default Object.freeze({\n  supportedPrecisions: Object.freeze(['year', 'month', 'day']),\n});\n","import config from 'lib/utils/config';\nimport {useDatepickerContext} from './context';\nimport useDatepickerActions from './actionCreators';\n\nconst useIncrementPrecision = minPrecision => {\n  const {\n    state: {precision},\n  } = useDatepickerContext();\n\n  const {setPrecision} = useDatepickerActions();\n\n  const getNextPrecision = (precisionEnum, currentPrecision) => {\n    const currentIndex = precisionEnum.indexOf(currentPrecision);\n    return precisionEnum[currentIndex + 1];\n  };\n\n  const limitPrecision = precisionEnum => {\n    const currentIndex = precisionEnum.indexOf(minPrecision);\n    return precisionEnum.slice(0, currentIndex + 1);\n  };\n\n  const datepickerPrecisions = limitPrecision(\n    config.supportedPrecisions,\n    minPrecision\n  );\n  const nextPrecision = getNextPrecision(datepickerPrecisions, precision);\n  return () => {\n    nextPrecision && setPrecision(nextPrecision);\n  };\n};\n\nexport default useIncrementPrecision;\n","import {useCallback} from 'react';\nimport {\n  useDatepickerActions,\n  useDatepickerContext,\n  useIncrementPrecision,\n} from 'lib/features/datepicker';\n\nconst useLogic = (onDateSet, minPrecision) => {\n  const {\n    state: {precision},\n  } = useDatepickerContext();\n  const {setDate, setVisibility} = useDatepickerActions();\n  const incrementPrecision = useIncrementPrecision(minPrecision);\n  const handleDateSet = useCallback(\n    date => {\n      if (precision === minPrecision) {\n        onDateSet(date);\n        setDate(date);\n      } else {\n        setVisibility(date);\n        incrementPrecision();\n      }\n    },\n    [\n      incrementPrecision,\n      minPrecision,\n      onDateSet,\n      precision,\n      setDate,\n      setVisibility,\n    ]\n  );\n  return {handleDateSet};\n};\n\nexport default useLogic;\n","import React, {Fragment} from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  useDatepickerContext,\n  useHasInitialValues,\n  useSetInitialValues,\n} from 'lib/features/datepicker';\nimport {useWeekDayNames} from 'lib/features/locale';\nimport Calendar from 'lib/components/logic/Calendar';\nimport Selector from 'lib/components/logic/Selector';\nimport Header from 'lib/components/logic/Header';\nimport DatepickerWrapper from 'lib/components/visual/Datepicker';\nimport HeaderUI from 'lib/components/visual/Header';\nimport SelectorVisual from 'lib/components/visual/Selector';\nimport Day from 'lib/components/visual/Day';\nimport Month from 'lib/components/visual/Month';\nimport Year from 'lib/components/visual/Year';\nimport Weekdays from 'lib/components/visual/Weekdays';\nimport useLogic from './useLogic';\n\nconst Datepicker = ({\n  initialDate,\n  today,\n  showHeader,\n  title,\n  minPrecision,\n  onDateSet,\n  renderDayAs,\n  dayCalendarClassName,\n  renderMonthAs,\n  monthCalendarClassName,\n  renderYearAs,\n  yearCalendarClassName,\n  renderWeekdaysAs,\n  startDate,\n  endDate,\n  disableDate,\n  highlightWeekends,\n  renderHeaderAs,\n  renderSelectorAs,\n  highlightDate,\n  wrapperClassName,\n}) => {\n  const {\n    state: {selectedTimestamp, todayTimestamp, visibleTimestamp, precision},\n  } = useDatepickerContext();\n\n  const hasInitialValues = useHasInitialValues();\n\n  const {handleDateSet} = useLogic(onDateSet, minPrecision);\n\n  useSetInitialValues({initialDate, today, minPrecision});\n\n  const WeekdaysComponent = renderWeekdaysAs;\n\n  const weekDayNames = useWeekDayNames();\n\n  return (\n    hasInitialValues && (\n      <DatepickerWrapper\n        className={wrapperClassName || undefined}\n        title={title}>\n        {showHeader && <Header renderAs={renderHeaderAs} title={title} />}\n        <Selector\n          precision={precision}\n          renderAs={renderSelectorAs}\n          selectedTimestamp={selectedTimestamp}\n          todayTimestamp={todayTimestamp}\n          visibleTimestamp={visibleTimestamp}\n          startDate={startDate}\n          endDate={endDate}\n        />\n        {precision === 'day' && (\n          <Fragment>\n            <WeekdaysComponent names={weekDayNames} />\n            <Calendar\n              precision=\"day\"\n              highlightWeekends={highlightWeekends}\n              wrapperClassName={dayCalendarClassName}\n              renderAs={renderDayAs}\n              disableDate={disableDate}\n              highlightDate={highlightDate}\n              selectedTimestamp={selectedTimestamp}\n              visibleTimestamp={visibleTimestamp}\n              todayTimestamp={todayTimestamp}\n              onDateSet={handleDateSet}\n              startDate={startDate}\n              endDate={endDate}\n            />\n          </Fragment>\n        )}\n        {precision === 'month' && (\n          <Calendar\n            precision=\"month\"\n            disableDate={disableDate}\n            highlightDate={highlightDate}\n            wrapperClassName={monthCalendarClassName}\n            renderAs={renderMonthAs}\n            selectedTimestamp={selectedTimestamp}\n            visibleTimestamp={visibleTimestamp}\n            todayTimestamp={todayTimestamp}\n            onDateSet={handleDateSet}\n            startDate={startDate}\n            endDate={endDate}\n          />\n        )}\n        {precision === 'year' && (\n          <Calendar\n            precision=\"year\"\n            disableDate={disableDate}\n            highlightDate={highlightDate}\n            wrapperClassName={yearCalendarClassName}\n            renderAs={renderYearAs}\n            selectedTimestamp={selectedTimestamp}\n            visibleTimestamp={visibleTimestamp}\n            todayTimestamp={todayTimestamp}\n            onDateSet={handleDateSet}\n            startDate={startDate}\n            endDate={endDate}\n          />\n        )}\n      </DatepickerWrapper>\n    )\n  );\n};\n\nexport const propTypes = {\n  /** Set initial selected date when component renders. */\n  initialDate: PropTypes.instanceOf(Date),\n  /** Set today date. */\n  today: PropTypes.instanceOf(Date),\n  /** Set start date of calendar. */\n  startDate: PropTypes.instanceOf(Date),\n  /** Set end date of calendar. */\n  endDate: PropTypes.instanceOf(Date),\n  /** Flag to show or hide header. */\n  showHeader: PropTypes.bool,\n  /** Set title of calendar show in Header. */\n  title: PropTypes.string,\n  /** Set minimum precision (measuring unit) of calendar. Possible values: 'day', 'month', 'year'. */\n  minPrecision: PropTypes.oneOf(['year', 'month', 'day']),\n  /** Callback when user clicks selected date */\n  onDateSet: PropTypes.func.isRequired,\n  /** Override __Datepicker__ wrapper classname. */\n  wrapperClassName: PropTypes.string,\n  /** Define component which renders __day__ entry. */\n  renderDayAs: PropTypes.elementType,\n  /** Override __Day calendar__ wrapping class name. */\n  dayCalendarClassName: PropTypes.string,\n  /** Define component which renders __month__ entry. */\n  renderMonthAs: PropTypes.elementType,\n  /** Override __Month calendar__ wrapping class name */\n  monthCalendarClassName: PropTypes.string,\n  /** Define component which renders __year__ entry. */\n  renderYearAs: PropTypes.elementType,\n  /** Override __Year calendar__ wrapping class name */\n  yearCalendarClassName: PropTypes.string,\n  /** Define component which renders __week days__ row inside day calendar. */\n  renderWeekdaysAs: PropTypes.elementType,\n  /** Define component which renders __Header__. */\n  renderHeaderAs: PropTypes.elementType,\n  /** Define component which renders __Precision selector__. */\n  renderSelectorAs: PropTypes.elementType,\n  /** Function which decides if date should be __disabled__. It gets `isWeekend`, `precision` and `date` and outputs Boolean.\n   * `({isWeekend, precision, date}) => false`\n   * */\n  disableDate: PropTypes.func,\n  /** Function which decides if date should be __highlighted__. It gets `isWeekend`, `precision` and `date` and outputs Boolean.\n   * `({isWeekend, precision, date}) => false`\n   * */\n  highlightDate: PropTypes.func,\n  /** Flag to enable __weekend highlight__ prop. */\n  highlightWeekends: PropTypes.bool,\n  /** date-fns locale object. Defaults to english */\n  dateFnsLocale: PropTypes.shape({}), // eslint-disable-line react/require-default-props\n  /** Theme object to customize style for UI components */\n  theme: PropTypes.shape({}), // eslint-disable-line react/require-default-props\n};\n\nDatepicker.propTypes = propTypes;\n\nDatepicker.defaultProps = {\n  initialDate: new Date(2020, 0, 6),\n  startDate: new Date(2020, 0, 1),\n  endDate: new Date(2020, 1, 25),\n  today: new Date(Date.now()),\n  wrapperClassName: '',\n  showHeader: true,\n  title: '',\n  minPrecision: 'day',\n  renderDayAs: Day,\n  dayCalendarClassName: '',\n  renderMonthAs: Month,\n  monthCalendarClassName: '',\n  renderYearAs: Year,\n  yearCalendarClassName: '',\n  renderWeekdaysAs: Weekdays,\n  renderHeaderAs: HeaderUI,\n  renderSelectorAs: SelectorVisual,\n  disableDate: ({isWeekend, precision, date}) => false,\n  highlightDate: ({isWeekend, precision, date}) => false,\n  highlightWeekends: true,\n};\n\nexport default Datepicker;\n","import Datepicker from './Datepicker';\n\nexport default Datepicker;\n","import {useModalContext} from './context';\nimport {TOGGLE_DATEPICKER} from './actionTypes';\n\nconst useModalActions = () => {\n  const {dispatch} = useModalContext();\n  return {\n    toggleDatepicker: isVisible => {\n      dispatch({\n        type: TOGGLE_DATEPICKER,\n        payload: isVisible,\n      });\n    },\n  };\n};\n\nexport default useModalActions;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {useTheme} from 'lib/features/theme';\nimport classes from './Input.module.css';\n\nconst Input = ({toggleDatepicker, value, date, onChange}) => {\n  const {setRef, style} = useTheme();\n\n  const handleClick = event => {\n    event.stopPropagation();\n    toggleDatepicker(true);\n  };\n  return (\n    <input\n      style={style}\n      ref={setRef}\n      className={classes.input}\n      readOnly\n      value={value}\n      onClick={handleClick}\n      type=\"text\"\n    />\n  );\n};\n\nInput.propTypes = {\n  /** Method to toggle Datepicker visibility */\n  toggleDatepicker: PropTypes.func.isRequired,\n  /** Sets date for datepicker from user input.\n   * `Date => {console.log(Date)}`\n   */\n  onChange: PropTypes.func.isRequired,\n  /** Selected date */\n  date: PropTypes.instanceOf(Date).isRequired,\n  /** Value to display inside Input */\n  value: PropTypes.string.isRequired,\n};\n\nexport default Input;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Popover from 'react-tiny-popover';\nimport classes from './PopoverProvider.module.css';\n\nconst PopoverProvider = ({\n  renderDatepickerAs,\n  isVisible,\n  children,\n  toggleDatepicker,\n  wrapPopoverWith,\n}) => {\n  const Datepicker = renderDatepickerAs;\n  const Wrapper = wrapPopoverWith;\n  return (\n    <Popover\n      align=\"start\"\n      isOpen={isVisible}\n      position={['bottom', 'top']}\n      padding={0}\n      containerClassName={classes.container}\n      content={({position}) => (\n        <Wrapper toggleDatepicker={toggleDatepicker} position={position}>\n          <Datepicker />\n        </Wrapper>\n      )}>\n      {children}\n    </Popover>\n  );\n};\n\nPopoverProvider.propTypes = {\n  children: PropTypes.node.isRequired,\n  renderDatepickerAs: PropTypes.elementType.isRequired,\n  wrapPopoverWith: PropTypes.elementType.isRequired,\n  isVisible: PropTypes.bool.isRequired,\n  toggleDatepicker: PropTypes.func.isRequired,\n};\n\nPopoverProvider.defaultProps = {};\n\nexport default PopoverProvider;\n","import {useEffect} from 'react';\n\nconst useOnClickOutside = (ref, handler) => {\n  useEffect(() => {\n    const listener = event => {\n      if (!ref.current || ref.current.contains(event.target)) {\n        return;\n      }\n      handler();\n    };\n    document.addEventListener('mousedown', listener);\n    document.addEventListener('touchstart', listener);\n    return () => {\n      document.removeEventListener('mousedown', listener);\n      document.removeEventListener('touchstart', listener);\n    };\n  }, [ref, handler]);\n};\n\nexport default useOnClickOutside;\n","import React, {useEffect} from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\nimport {useTheme} from 'lib/features/theme';\nimport useOnClickOutside from 'lib/utils/useOnClickOutside';\nimport classes from './PopoverWrapper.module.css';\n\nconst PopoverWrapper = ({position, children, toggleDatepicker}) => {\n  /* Apply postcss theme to containing div */\n  const {ref, setRef, style} = useTheme();\n\n  /* Close popover on click outside */\n  useOnClickOutside(ref, () => {\n    toggleDatepicker(false);\n  });\n\n  /* Close popover when user is scrolling page */\n  useEffect(() => {\n    const listener = () => {\n      toggleDatepicker(false);\n    };\n    document.addEventListener('scroll', listener);\n    return () => {\n      document.removeEventListener('scroll', listener);\n    };\n  }, [toggleDatepicker]);\n\n  return (\n    <div\n      style={style}\n      ref={setRef}\n      className={classnames({\n        [classes.wrapper]: true,\n        /* Conditional class to position Popover relative to Input */\n        [classes[position]]: true,\n      })}>\n      <div\n        className={classnames({\n          [classes.triangle]: true,\n          /* Conditional class to position triangle attachment relative to Input */\n          [classes[position]]: true,\n        })}\n      />\n      {children}\n    </div>\n  );\n};\n\nPopoverWrapper.propTypes = {\n  children: PropTypes.node.isRequired,\n  /** Method to toggle Datepicker visibility */\n  toggleDatepicker: PropTypes.func.isRequired,\n  /** Calculated position of Popover to fit into viewport */\n  position: PropTypes.oneOf(['bottom', 'top', 'left', 'right']).isRequired,\n};\n\nexport default PopoverWrapper;\n","import React, {useRef} from 'react';\nimport PropTypes from 'prop-types';\nimport useOnClickOutside from 'lib/utils/useOnClickOutside';\nimport classes from './ModalWrapper.module.css';\n\nconst ModalWrapper = ({children, toggleDatepicker}) => {\n  const ref = useRef();\n\n  /* React hook to trigger provided callback, when user clicks outside modal content area */\n  useOnClickOutside(ref, () => {\n    toggleDatepicker(false);\n  });\n  return (\n    <div ref={ref} className={classes.content}>\n      {children}\n    </div>\n  );\n};\n\nModalWrapper.propTypes = {\n  children: PropTypes.node.isRequired,\n  /** Callback to toggle Datepicker visibility */\n  toggleDatepicker: PropTypes.func.isRequired,\n};\n\nexport default ModalWrapper;\n","import {useCallback} from 'react';\nimport {useModalActions} from 'lib/features/modal';\nimport {convertToDate} from 'lib/utils/dateUtils';\nimport {useFormatDate} from 'lib/features/locale';\nimport {useDatepickerContext} from 'lib/features/datepicker';\n\nconst useLogic = ({onDateSet, hideOnSelect}) => {\n  const {toggleDatepicker} = useModalActions();\n  const formatDate = useFormatDate();\n  const {\n    state: {selectedTimestamp},\n  } = useDatepickerContext();\n\n  const handleDateSet = useCallback(\n    date => {\n      onDateSet(date);\n      hideOnSelect && toggleDatepicker(false);\n    },\n    [hideOnSelect, onDateSet, toggleDatepicker]\n  );\n\n  const formatValue = useCallback(\n    formatPattern =>\n      formatDate(formatPattern, convertToDate(selectedTimestamp)),\n    [formatDate, selectedTimestamp]\n  );\n\n  const getDate = () => convertToDate(selectedTimestamp);\n\n  return {handleDateSet, formatValue, getDate};\n};\n\nexport default useLogic;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {useModalContext, useModalActions} from 'lib/features/modal';\nimport {\n  useHasInitialValues,\n  useSetInitialValues,\n} from 'lib/features/datepicker';\nimport Datepicker, {propTypes} from 'lib/components/Datepicker/Datepicker';\nimport Input from 'lib/components/visual/Input';\nimport PopoverProvider, {PopoverWrapper} from 'lib/components/visual/Popover';\nimport ModalProvider, {ModalWrapper} from 'lib/components/visual/Modal';\nimport useLogic from './useLogic';\n\nconst DatepickerInput = ({\n  renderInputAs,\n  mode,\n  formatPattern,\n  renderDatepickerAs,\n  onDateSet,\n  popoverProvider,\n  wrapPopoverWith,\n  modalProvider,\n  wrapModalWith,\n  hideOnSelect,\n  datePickerProps,\n  datePickerDefaultProps,\n}) => {\n  const {\n    state: {isVisible},\n  } = useModalContext();\n\n  const {toggleDatepicker} = useModalActions();\n\n  const {handleDateSet, formatValue, getDate} = useLogic({\n    onDateSet,\n    hideOnSelect,\n  });\n\n  const RenderingLogicProvider =\n    mode === 'popover' ? popoverProvider : modalProvider;\n\n  const InputComponent = renderInputAs;\n  const DatepickerComponent = renderDatepickerAs;\n\n  const DatepickerWithProps = () => (\n    <DatepickerComponent\n      showHeader={mode === 'modal'}\n      onDateSet={handleDateSet}\n      {...datePickerProps}\n    />\n  );\n\n  const {initialDate, today, minPrecision} = {\n    ...datePickerDefaultProps,\n    ...datePickerProps,\n  };\n\n  useSetInitialValues({initialDate, today, minPrecision});\n  const hasInitialValues = useHasInitialValues();\n\n  // eslint-disable-next-line react/prop-types\n  const RefWrap = React.forwardRef(({children}, ref) => (\n    <div ref={ref}>{children}</div>\n  ));\n\n  return (\n    hasInitialValues && (\n      <RenderingLogicProvider\n        isVisible={isVisible}\n        toggleDatepicker={toggleDatepicker}\n        wrapPopoverWith={wrapPopoverWith}\n        wrapModalWith={wrapModalWith}\n        renderDatepickerAs={DatepickerWithProps}>\n        <RefWrap>\n          <InputComponent\n            onChange={onDateSet}\n            date={getDate()}\n            value={formatValue(formatPattern)}\n            toggleDatepicker={toggleDatepicker}\n          />\n        </RefWrap>\n      </RenderingLogicProvider>\n    )\n  );\n};\n\nDatepickerInput.propTypes = {\n  /** Callback when user selects date */\n  onDateSet: PropTypes.func.isRequired,\n  /** __Rendering__ mode of attached Datepicker */\n  mode: PropTypes.oneOf(['popover', 'modal']),\n  /** Flag to __show or hide__ Datepicker when date is selected */\n  hideOnSelect: PropTypes.bool,\n  /** Define component which renders __Input__. */\n  renderInputAs: PropTypes.elementType,\n  /**\n   * Define component which renders __Datepicker__ entry.\n   * @ignore\n   */\n  renderDatepickerAs: PropTypes.elementType,\n  /** Define component which wraps __Popover__. */\n  wrapPopoverWith: PropTypes.elementType,\n  /**\n   * Define rendering logic provider for __Popover__.\n   * @ignore\n   */\n  popoverProvider: PropTypes.elementType,\n  /**\n   * Define rendering logic provider for __Modal__.\n   * @ignore\n   */\n  modalProvider: PropTypes.elementType,\n  /** Define component which wraps __Modal__. */\n  wrapModalWith: PropTypes.elementType,\n  /**\n   * date-fns format pattern to format date value inside input\n   * @see https://date-fns.org/docs/format\n   */\n  formatPattern: PropTypes.string,\n  /**\n   * Set props for __Datepicker__ component.\n   * @see https://morewings.github.io/react-calendar-toolkit/#!/Available%20components/Datepicker\n   */\n  datePickerProps: PropTypes.shape({\n    ...propTypes,\n    onDateSet: undefined,\n    theme: undefined,\n    dateFnsLocale: undefined,\n  }),\n  /**\n   * Default values for __Datepicker__ component.\n   * @ignore\n   */\n  datePickerDefaultProps: PropTypes.shape({\n    initialDate: PropTypes.instanceOf(Date),\n    today: PropTypes.instanceOf(Date),\n    minPrecision: PropTypes.string,\n  }),\n  /** Theme object to customize style for UI components */\n  theme: PropTypes.shape({}), // eslint-disable-line react/require-default-props\n  /** date-fns locale object. Defaults to english */\n  dateFnsLocale: PropTypes.shape({}), // eslint-disable-line react/require-default-props\n};\n\nDatepickerInput.defaultProps = {\n  mode: 'popover',\n  hideOnSelect: true,\n  renderInputAs: Input,\n  renderDatepickerAs: Datepicker,\n  formatPattern: 'MM/dd/yyyy',\n  popoverProvider: PopoverProvider,\n  wrapPopoverWith: PopoverWrapper,\n  wrapModalWith: ModalWrapper,\n  modalProvider: ModalProvider,\n  datePickerProps: {},\n  datePickerDefaultProps: {\n    initialDate: new Date(2020, 0, 8),\n    today: new Date(),\n    minPrecision: 'day',\n  },\n};\n\nexport default DatepickerInput;\n","import React, {useEffect, useRef, useState, Fragment} from 'react';\nimport ReactDOM from 'react-dom';\nimport PropTypes from 'prop-types';\nimport {useThemeContext} from 'lib/features/theme';\nimport defaults from 'lib/utils/defaultTheme';\nimport classes from './ModalProvider.module.css';\n\nconst Modal = ({\n  toggleDatepicker,\n  children,\n  isVisible,\n  renderDatepickerAs,\n  wrapModalWith,\n}) => {\n  const modalContainerRef = useRef();\n  const [isNodeAttached, setIsNodeAttached] = useState(false);\n  const Datepicker = renderDatepickerAs;\n  const Wrapper = wrapModalWith;\n  const theme = useThemeContext();\n\n  /** Create modal container node */\n  useEffect(() => {\n    const propName = 'modalBgColor';\n    const bgColor = theme[propName] || defaults[propName];\n    if (isVisible && !isNodeAttached) {\n      modalContainerRef.current = document.createElement('div');\n      modalContainerRef.current.classList.add(classes.container);\n      modalContainerRef.current.style.setProperty(`--${propName}`, bgColor);\n      document.body.appendChild(modalContainerRef.current);\n      setIsNodeAttached(true);\n    }\n    return () => {\n      isNodeAttached && modalContainerRef.current.remove();\n      isNodeAttached && setIsNodeAttached(false);\n    };\n  }, [isNodeAttached, isVisible, theme]);\n\n  return (\n    <Fragment>\n      {children}\n      {isVisible &&\n        isNodeAttached &&\n        ReactDOM.createPortal(\n          <Wrapper toggleDatepicker={toggleDatepicker}>\n            <Datepicker />\n          </Wrapper>,\n          modalContainerRef.current\n        )}\n    </Fragment>\n  );\n};\n\nModal.propTypes = {\n  children: PropTypes.node.isRequired,\n  toggleDatepicker: PropTypes.func.isRequired,\n  renderDatepickerAs: PropTypes.elementType.isRequired,\n  wrapModalWith: PropTypes.elementType.isRequired,\n  isVisible: PropTypes.bool.isRequired,\n};\n\nexport default Modal;\n","import DatepickerInput from './DatepickerInput';\n\nexport default DatepickerInput;\n","import compose from 'lib/utils/compose';\nimport {withModalProvider} from 'lib/features/modal';\nimport {withDatepickerProvider} from 'lib/features/datepicker';\nimport Datepicker from 'lib/components/Datepicker';\nimport DatepickerInput from 'lib/components/DatepickerInput';\nimport {useFormatDate, withLocaleContext} from 'lib/features/locale';\nimport {withTheme, useTheme, useThemeContext} from 'lib/features/theme';\nimport useOnClickOutside from 'lib/utils/useOnClickOutside';\nimport defaultTheme from 'lib/utils/defaultTheme';\nimport useScrollIntoView from 'lib/utils/scrollIntoView';\n\nconst WrappedDatepickerInput = compose(\n  withDatepickerProvider,\n  withModalProvider,\n  withLocaleContext,\n  withTheme\n)(DatepickerInput);\n\nconst WrappedDatepicker = compose(\n  withDatepickerProvider,\n  withLocaleContext,\n  withTheme\n)(Datepicker);\n\nexport {\n  useFormatDate,\n  useTheme,\n  useThemeContext,\n  defaultTheme,\n  useScrollIntoView,\n  useOnClickOutside,\n  WrappedDatepickerInput as DatepickerInput,\n  WrappedDatepicker as Datepicker,\n};\n","import React from 'react';\nimport {isSameDay} from 'date-fns';\nimport customLocale from 'date-fns/locale/es';\nimport {Datepicker, DatepickerInput} from 'lib';\nimport './App.css';\n\nconst highlightDate = ({date, precision}) =>\n  isSameDay(date, new Date(2020, 0, 7));\n\nconst App = () => (\n  <div className=\"app\">\n    <div className=\"container\">\n      <Datepicker\n        startDate={new Date(1999, 11, 6)}\n        endDate={new Date(2020, 1, 25)}\n        minPrecision=\"day\"\n        highlightDate={highlightDate}\n        onDateSet={date => {\n          // eslint-disable-next-line no-console\n          console.log('date set', date);\n        }}\n        title=\"Demo datepicker\"\n        theme={{\n          headerBgColor: 'purple',\n        }}\n      />\n    </div>\n    <div className=\"container\">\n      <DatepickerInput\n        mode=\"popover\"\n        minPrecision=\"month\"\n        onDateSet={date => {\n          // console.log('date set', date);\n        }}\n        dateFnsLocale={customLocale}\n        title=\"Demo datepicker\"\n      />\n    </div>\n  </div>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './environment/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}