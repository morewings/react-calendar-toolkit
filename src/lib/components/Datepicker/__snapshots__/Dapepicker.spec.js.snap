// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Datepicker disables weekend highlight 1`] = `
Object {
  "disableDate": [Function],
  "endDate": 2020-02-25T00:00:00.000Z,
  "highlightDate": [Function],
  "highlightWeekends": false,
  "onDateSet": [Function],
  "precision": "day",
  "renderAs": [Function],
  "selectedTimestamp": 1578268800000,
  "startDate": 2020-01-01T00:00:00.000Z,
  "todayTimestamp": 1578614400000,
  "visibleTimestamp": 1578268800000,
  "wrapperClassName": "",
}
`;

exports[`Datepicker passes \`disableDate\` 1`] = `
Object {
  "disableDate": [MockFunction],
  "endDate": 2020-02-25T00:00:00.000Z,
  "highlightDate": [Function],
  "highlightWeekends": true,
  "onDateSet": [Function],
  "precision": "day",
  "renderAs": [Function],
  "selectedTimestamp": 1578268800000,
  "startDate": 2020-01-01T00:00:00.000Z,
  "todayTimestamp": 1578614400000,
  "visibleTimestamp": 1578268800000,
  "wrapperClassName": "",
}
`;

exports[`Datepicker passes \`highlightDate\` 1`] = `
Object {
  "disableDate": [Function],
  "endDate": 2020-02-25T00:00:00.000Z,
  "highlightDate": [MockFunction],
  "highlightWeekends": true,
  "onDateSet": [Function],
  "precision": "day",
  "renderAs": [Function],
  "selectedTimestamp": 1578268800000,
  "startDate": 2020-01-01T00:00:00.000Z,
  "todayTimestamp": 1578614400000,
  "visibleTimestamp": 1578268800000,
  "wrapperClassName": "",
}
`;

exports[`Datepicker passes Day(s) Calendar custom UI 1`] = `
Object {
  "disableDate": [Function],
  "endDate": 2020-02-25T00:00:00.000Z,
  "highlightDate": [Function],
  "highlightWeekends": true,
  "onDateSet": [Function],
  "precision": "day",
  "renderAs": "MockComponent",
  "selectedTimestamp": 1578268800000,
  "startDate": 2020-01-01T00:00:00.000Z,
  "todayTimestamp": 1578614400000,
  "visibleTimestamp": 1578268800000,
  "wrapperClassName": "foo",
}
`;

exports[`Datepicker passes Month(s) Calendar custom UI 1`] = `
Object {
  "disableDate": [Function],
  "endDate": 2020-02-25T00:00:00.000Z,
  "highlightDate": [Function],
  "onDateSet": [Function],
  "precision": "month",
  "renderAs": "MockComponent",
  "selectedTimestamp": 1578268800000,
  "startDate": 2020-01-01T00:00:00.000Z,
  "todayTimestamp": 1578614400000,
  "visibleTimestamp": 1578268800000,
  "wrapperClassName": "foo",
}
`;

exports[`Datepicker passes Weekdays Row custom UI 1`] = `
Object {
  "names": Array [
    Object {
      "abbreviated": "Sun",
      "narrow": "S",
      "numeric": 0,
      "short": "Su",
      "wide": "Sunday",
    },
    Object {
      "abbreviated": "Mon",
      "narrow": "M",
      "numeric": 1,
      "short": "Mo",
      "wide": "Monday",
    },
    Object {
      "abbreviated": "Tue",
      "narrow": "T",
      "numeric": 2,
      "short": "Tu",
      "wide": "Tuesday",
    },
    Object {
      "abbreviated": "Wed",
      "narrow": "W",
      "numeric": 3,
      "short": "We",
      "wide": "Wednesday",
    },
    Object {
      "abbreviated": "Thu",
      "narrow": "T",
      "numeric": 4,
      "short": "Th",
      "wide": "Thursday",
    },
    Object {
      "abbreviated": "Fri",
      "narrow": "F",
      "numeric": 5,
      "short": "Fr",
      "wide": "Friday",
    },
    Object {
      "abbreviated": "Sat",
      "narrow": "S",
      "numeric": 6,
      "short": "Sa",
      "wide": "Saturday",
    },
  ],
}
`;

exports[`Datepicker passes Year(s) Calendar custom UI 1`] = `
Object {
  "disableDate": [Function],
  "endDate": 2020-02-25T00:00:00.000Z,
  "highlightDate": [Function],
  "onDateSet": [Function],
  "precision": "year",
  "renderAs": "MockComponent",
  "selectedTimestamp": 1578268800000,
  "startDate": 2020-01-01T00:00:00.000Z,
  "todayTimestamp": 1578614400000,
  "visibleTimestamp": 1578268800000,
  "wrapperClassName": "foo",
}
`;

exports[`Datepicker renders 1`] = `
<DocumentFragment>
  <div
    aria-label=""
    class="datepickerWrapper"
    role="dialog"
    style="--fontPrimary: Helvetica Neue; --fontSecondary: Arial; --fontFallback: sans-serif; --fontSize: 14px; --fontWeight: 400; --fontSizeSmall: 10px; --fontSizeBig: 24px; --calendarWidth: 240px; --datePickerWidth: calc(var(--calendarWidth) + var(--innerPadding) * 2); --selectorHeight: 36px; --calendarHeight: 200px; --innerPadding: 12px; --entryHeight: 32px; --entryMargin: 1px; --datepickerBorderRadius: 4px; --entryBorderRadius: 4px; --bgColor: white; --textColor: black; --headerBgColor: #43a047; --weekendTextColor: red; --headerTextColor: white; --borderColor: rgba(0, 0, 0, 0.38); --modalBgColor: rgba(0, 0, 0, 0.38); --weekDayColor: rgba(0, 0, 0, 0.38); --entryHoverColor: rgba(0, 0, 0, 0.08); --entrySelectedColor: #43a047; --entryHighlightColor: lightblue; --inputWidth: 90px; --inputPadding: 8px; --inputBorderRadius: 4px; --inputBorderColor: rgba(0, 0, 0, 0.38); --inputHighlightColor: lightblue;"
  >
    <div>
      Header
    </div>
    <div>
      Selector
    </div>
    <div>
      Weekdays
    </div>
    <div>
      Calendar
    </div>
  </div>
</DocumentFragment>
`;

exports[`Datepicker renders 2`] = `
Object {
  "renderAs": [Function],
  "title": "",
}
`;

exports[`Datepicker renders 3`] = `
Object {
  "disableDate": [Function],
  "endDate": 2020-02-25T00:00:00.000Z,
  "highlightDate": [Function],
  "highlightWeekends": true,
  "onDateSet": [Function],
  "precision": "day",
  "renderAs": [Function],
  "selectedTimestamp": 1578268800000,
  "startDate": 2020-01-01T00:00:00.000Z,
  "todayTimestamp": 1578614400000,
  "visibleTimestamp": 1578268800000,
  "wrapperClassName": "",
}
`;

exports[`Datepicker renders 4`] = `
Object {
  "endDate": 2020-02-25T00:00:00.000Z,
  "precision": "day",
  "renderAs": [Function],
  "selectedTimestamp": 1578268800000,
  "startDate": 2020-01-01T00:00:00.000Z,
  "todayTimestamp": 1578614400000,
  "visibleTimestamp": 1578268800000,
}
`;

exports[`Datepicker renders Header custom UI 1`] = `
<DocumentFragment>
  <div
    aria-label=""
    class="datepickerWrapper"
    role="dialog"
    style="--fontPrimary: Helvetica Neue; --fontSecondary: Arial; --fontFallback: sans-serif; --fontSize: 14px; --fontWeight: 400; --fontSizeSmall: 10px; --fontSizeBig: 24px; --calendarWidth: 240px; --datePickerWidth: calc(var(--calendarWidth) + var(--innerPadding) * 2); --selectorHeight: 36px; --calendarHeight: 200px; --innerPadding: 12px; --entryHeight: 32px; --entryMargin: 1px; --datepickerBorderRadius: 4px; --entryBorderRadius: 4px; --bgColor: white; --textColor: black; --headerBgColor: #43a047; --weekendTextColor: red; --headerTextColor: white; --borderColor: rgba(0, 0, 0, 0.38); --modalBgColor: rgba(0, 0, 0, 0.38); --weekDayColor: rgba(0, 0, 0, 0.38); --entryHoverColor: rgba(0, 0, 0, 0.08); --entrySelectedColor: #43a047; --entryHighlightColor: lightblue; --inputWidth: 90px; --inputPadding: 8px; --inputBorderRadius: 4px; --inputBorderColor: rgba(0, 0, 0, 0.38); --inputHighlightColor: lightblue;"
  >
    <div>
      Header
    </div>
    <div>
      Selector
    </div>
    <div>
      Weekdays
    </div>
    <div>
      Calendar
    </div>
  </div>
</DocumentFragment>
`;

exports[`Datepicker renders Selector custom UI 1`] = `
<DocumentFragment>
  <div
    aria-label=""
    class="datepickerWrapper"
    role="dialog"
    style="--fontPrimary: Helvetica Neue; --fontSecondary: Arial; --fontFallback: sans-serif; --fontSize: 14px; --fontWeight: 400; --fontSizeSmall: 10px; --fontSizeBig: 24px; --calendarWidth: 240px; --datePickerWidth: calc(var(--calendarWidth) + var(--innerPadding) * 2); --selectorHeight: 36px; --calendarHeight: 200px; --innerPadding: 12px; --entryHeight: 32px; --entryMargin: 1px; --datepickerBorderRadius: 4px; --entryBorderRadius: 4px; --bgColor: white; --textColor: black; --headerBgColor: #43a047; --weekendTextColor: red; --headerTextColor: white; --borderColor: rgba(0, 0, 0, 0.38); --modalBgColor: rgba(0, 0, 0, 0.38); --weekDayColor: rgba(0, 0, 0, 0.38); --entryHoverColor: rgba(0, 0, 0, 0.08); --entrySelectedColor: #43a047; --entryHighlightColor: lightblue; --inputWidth: 90px; --inputPadding: 8px; --inputBorderRadius: 4px; --inputBorderColor: rgba(0, 0, 0, 0.38); --inputHighlightColor: lightblue;"
  >
    <div>
      Header
    </div>
    <div>
      Selector
    </div>
    <div>
      Weekdays
    </div>
    <div>
      Calendar
    </div>
  </div>
</DocumentFragment>
`;

exports[`Datepicker renders custom Wrapper 1`] = `
<DocumentFragment>
  <div
    aria-label=""
    class="foo"
    role="dialog"
    style="--fontPrimary: Helvetica Neue; --fontSecondary: Arial; --fontFallback: sans-serif; --fontSize: 14px; --fontWeight: 400; --fontSizeSmall: 10px; --fontSizeBig: 24px; --calendarWidth: 240px; --datePickerWidth: calc(var(--calendarWidth) + var(--innerPadding) * 2); --selectorHeight: 36px; --calendarHeight: 200px; --innerPadding: 12px; --entryHeight: 32px; --entryMargin: 1px; --datepickerBorderRadius: 4px; --entryBorderRadius: 4px; --bgColor: white; --textColor: black; --headerBgColor: #43a047; --weekendTextColor: red; --headerTextColor: white; --borderColor: rgba(0, 0, 0, 0.38); --modalBgColor: rgba(0, 0, 0, 0.38); --weekDayColor: rgba(0, 0, 0, 0.38); --entryHoverColor: rgba(0, 0, 0, 0.08); --entrySelectedColor: #43a047; --entryHighlightColor: lightblue; --inputWidth: 90px; --inputPadding: 8px; --inputBorderRadius: 4px; --inputBorderColor: rgba(0, 0, 0, 0.38); --inputHighlightColor: lightblue;"
  >
    <div>
      Header
    </div>
    <div>
      Selector
    </div>
    <div>
      Weekdays
    </div>
    <div>
      Calendar
    </div>
  </div>
</DocumentFragment>
`;

exports[`Datepicker renders date related props: initialDate: Sun Jan 12 2020 00:00:00 GMT+0000 (Coordinated Universal Time), startDate: Tue Feb 12 2019 00:00:00 GMT+0000 (Coordinated Universal Time), endDate: Fri Feb 12 2021 00:00:00 GMT+0000 (Coordinated Universal Time), today: Mon Jan 13 2020 00:00:00 GMT+0000 (Coordinated Universal Time), minPrecision: day  1`] = `
<DocumentFragment>
  <div
    aria-label=""
    class="datepickerWrapper"
    role="dialog"
    style="--fontPrimary: Helvetica Neue; --fontSecondary: Arial; --fontFallback: sans-serif; --fontSize: 14px; --fontWeight: 400; --fontSizeSmall: 10px; --fontSizeBig: 24px; --calendarWidth: 240px; --datePickerWidth: calc(var(--calendarWidth) + var(--innerPadding) * 2); --selectorHeight: 36px; --calendarHeight: 200px; --innerPadding: 12px; --entryHeight: 32px; --entryMargin: 1px; --datepickerBorderRadius: 4px; --entryBorderRadius: 4px; --bgColor: white; --textColor: black; --headerBgColor: #43a047; --weekendTextColor: red; --headerTextColor: white; --borderColor: rgba(0, 0, 0, 0.38); --modalBgColor: rgba(0, 0, 0, 0.38); --weekDayColor: rgba(0, 0, 0, 0.38); --entryHoverColor: rgba(0, 0, 0, 0.08); --entrySelectedColor: #43a047; --entryHighlightColor: lightblue; --inputWidth: 90px; --inputPadding: 8px; --inputBorderRadius: 4px; --inputBorderColor: rgba(0, 0, 0, 0.38); --inputHighlightColor: lightblue;"
  >
    <div>
      Header
    </div>
    <div>
      Selector
    </div>
    <div>
      Weekdays
    </div>
    <div>
      Calendar
    </div>
  </div>
</DocumentFragment>
`;

exports[`Datepicker renders date related props: initialDate: Sun Jan 12 2020 00:00:00 GMT+0000 (Coordinated Universal Time), startDate: Tue Feb 12 2019 00:00:00 GMT+0000 (Coordinated Universal Time), endDate: Fri Feb 12 2021 00:00:00 GMT+0000 (Coordinated Universal Time), today: Mon Jan 13 2020 00:00:00 GMT+0000 (Coordinated Universal Time), minPrecision: day  2`] = `
Object {
  "renderAs": [Function],
  "title": "",
}
`;

exports[`Datepicker renders date related props: initialDate: Sun Jan 12 2020 00:00:00 GMT+0000 (Coordinated Universal Time), startDate: Tue Feb 12 2019 00:00:00 GMT+0000 (Coordinated Universal Time), endDate: Fri Feb 12 2021 00:00:00 GMT+0000 (Coordinated Universal Time), today: Mon Jan 13 2020 00:00:00 GMT+0000 (Coordinated Universal Time), minPrecision: day  3`] = `
Object {
  "endDate": 2021-02-12T00:00:00.000Z,
  "precision": "day",
  "renderAs": [Function],
  "selectedTimestamp": 1578787200000,
  "startDate": 2019-02-12T00:00:00.000Z,
  "todayTimestamp": 1578614400000,
  "visibleTimestamp": 1578787200000,
}
`;

exports[`Datepicker renders date related props: initialDate: Sun Jan 12 2020 00:00:00 GMT+0000 (Coordinated Universal Time), startDate: Tue Feb 12 2019 00:00:00 GMT+0000 (Coordinated Universal Time), endDate: Fri Feb 12 2021 00:00:00 GMT+0000 (Coordinated Universal Time), today: Mon Jan 13 2020 00:00:00 GMT+0000 (Coordinated Universal Time), minPrecision: day  4`] = `
Object {
  "disableDate": [Function],
  "endDate": 2021-02-12T00:00:00.000Z,
  "highlightDate": [Function],
  "highlightWeekends": true,
  "onDateSet": [Function],
  "precision": "day",
  "renderAs": [Function],
  "selectedTimestamp": 1578787200000,
  "startDate": 2019-02-12T00:00:00.000Z,
  "todayTimestamp": 1578614400000,
  "visibleTimestamp": 1578787200000,
  "wrapperClassName": "",
}
`;

exports[`Datepicker renders date related props: initialDate: Sun Jan 12 2020 00:00:00 GMT+0000 (Coordinated Universal Time), startDate: Tue Feb 12 2019 00:00:00 GMT+0000 (Coordinated Universal Time), endDate: Fri Feb 12 2021 00:00:00 GMT+0000 (Coordinated Universal Time), today: Mon Jan 13 2020 00:00:00 GMT+0000 (Coordinated Universal Time), minPrecision: day  5`] = `
Object {
  "names": Array [
    Object {
      "abbreviated": "Sun",
      "narrow": "S",
      "numeric": 0,
      "short": "Su",
      "wide": "Sunday",
    },
    Object {
      "abbreviated": "Mon",
      "narrow": "M",
      "numeric": 1,
      "short": "Mo",
      "wide": "Monday",
    },
    Object {
      "abbreviated": "Tue",
      "narrow": "T",
      "numeric": 2,
      "short": "Tu",
      "wide": "Tuesday",
    },
    Object {
      "abbreviated": "Wed",
      "narrow": "W",
      "numeric": 3,
      "short": "We",
      "wide": "Wednesday",
    },
    Object {
      "abbreviated": "Thu",
      "narrow": "T",
      "numeric": 4,
      "short": "Th",
      "wide": "Thursday",
    },
    Object {
      "abbreviated": "Fri",
      "narrow": "F",
      "numeric": 5,
      "short": "Fr",
      "wide": "Friday",
    },
    Object {
      "abbreviated": "Sat",
      "narrow": "S",
      "numeric": 6,
      "short": "Sa",
      "wide": "Saturday",
    },
  ],
}
`;

exports[`Datepicker renders date related props: initialDate: Sun Jan 12 2020 00:00:00 GMT+0000 (Coordinated Universal Time), startDate: Tue Feb 12 2019 00:00:00 GMT+0000 (Coordinated Universal Time), endDate: Fri Feb 12 2021 00:00:00 GMT+0000 (Coordinated Universal Time), today: Mon Jan 13 2020 00:00:00 GMT+0000 (Coordinated Universal Time), minPrecision: month  1`] = `
<DocumentFragment>
  <div
    aria-label=""
    class="datepickerWrapper"
    role="dialog"
    style="--fontPrimary: Helvetica Neue; --fontSecondary: Arial; --fontFallback: sans-serif; --fontSize: 14px; --fontWeight: 400; --fontSizeSmall: 10px; --fontSizeBig: 24px; --calendarWidth: 240px; --datePickerWidth: calc(var(--calendarWidth) + var(--innerPadding) * 2); --selectorHeight: 36px; --calendarHeight: 200px; --innerPadding: 12px; --entryHeight: 32px; --entryMargin: 1px; --datepickerBorderRadius: 4px; --entryBorderRadius: 4px; --bgColor: white; --textColor: black; --headerBgColor: #43a047; --weekendTextColor: red; --headerTextColor: white; --borderColor: rgba(0, 0, 0, 0.38); --modalBgColor: rgba(0, 0, 0, 0.38); --weekDayColor: rgba(0, 0, 0, 0.38); --entryHoverColor: rgba(0, 0, 0, 0.08); --entrySelectedColor: #43a047; --entryHighlightColor: lightblue; --inputWidth: 90px; --inputPadding: 8px; --inputBorderRadius: 4px; --inputBorderColor: rgba(0, 0, 0, 0.38); --inputHighlightColor: lightblue;"
  >
    <div>
      Header
    </div>
    <div>
      Selector
    </div>
    <div>
      Calendar
    </div>
  </div>
</DocumentFragment>
`;

exports[`Datepicker renders date related props: initialDate: Sun Jan 12 2020 00:00:00 GMT+0000 (Coordinated Universal Time), startDate: Tue Feb 12 2019 00:00:00 GMT+0000 (Coordinated Universal Time), endDate: Fri Feb 12 2021 00:00:00 GMT+0000 (Coordinated Universal Time), today: Mon Jan 13 2020 00:00:00 GMT+0000 (Coordinated Universal Time), minPrecision: month  2`] = `
Object {
  "renderAs": [Function],
  "title": "",
}
`;

exports[`Datepicker renders date related props: initialDate: Sun Jan 12 2020 00:00:00 GMT+0000 (Coordinated Universal Time), startDate: Tue Feb 12 2019 00:00:00 GMT+0000 (Coordinated Universal Time), endDate: Fri Feb 12 2021 00:00:00 GMT+0000 (Coordinated Universal Time), today: Mon Jan 13 2020 00:00:00 GMT+0000 (Coordinated Universal Time), minPrecision: month  3`] = `
Object {
  "endDate": 2021-02-12T00:00:00.000Z,
  "precision": "month",
  "renderAs": [Function],
  "selectedTimestamp": 1578787200000,
  "startDate": 2019-02-12T00:00:00.000Z,
  "todayTimestamp": 1578614400000,
  "visibleTimestamp": 1578787200000,
}
`;

exports[`Datepicker renders date related props: initialDate: Sun Jan 12 2020 00:00:00 GMT+0000 (Coordinated Universal Time), startDate: Tue Feb 12 2019 00:00:00 GMT+0000 (Coordinated Universal Time), endDate: Fri Feb 12 2021 00:00:00 GMT+0000 (Coordinated Universal Time), today: Mon Jan 13 2020 00:00:00 GMT+0000 (Coordinated Universal Time), minPrecision: month  4`] = `
Object {
  "disableDate": [Function],
  "endDate": 2021-02-12T00:00:00.000Z,
  "highlightDate": [Function],
  "onDateSet": [Function],
  "precision": "month",
  "renderAs": [Function],
  "selectedTimestamp": 1578787200000,
  "startDate": 2019-02-12T00:00:00.000Z,
  "todayTimestamp": 1578614400000,
  "visibleTimestamp": 1578787200000,
  "wrapperClassName": "",
}
`;

exports[`Datepicker renders date related props: initialDate: Sun Jan 12 2020 00:00:00 GMT+0000 (Coordinated Universal Time), startDate: Tue Feb 12 2019 00:00:00 GMT+0000 (Coordinated Universal Time), endDate: Fri Feb 12 2021 00:00:00 GMT+0000 (Coordinated Universal Time), today: Mon Jan 13 2020 00:00:00 GMT+0000 (Coordinated Universal Time), minPrecision: year  1`] = `
<DocumentFragment>
  <div
    aria-label=""
    class="datepickerWrapper"
    role="dialog"
    style="--fontPrimary: Helvetica Neue; --fontSecondary: Arial; --fontFallback: sans-serif; --fontSize: 14px; --fontWeight: 400; --fontSizeSmall: 10px; --fontSizeBig: 24px; --calendarWidth: 240px; --datePickerWidth: calc(var(--calendarWidth) + var(--innerPadding) * 2); --selectorHeight: 36px; --calendarHeight: 200px; --innerPadding: 12px; --entryHeight: 32px; --entryMargin: 1px; --datepickerBorderRadius: 4px; --entryBorderRadius: 4px; --bgColor: white; --textColor: black; --headerBgColor: #43a047; --weekendTextColor: red; --headerTextColor: white; --borderColor: rgba(0, 0, 0, 0.38); --modalBgColor: rgba(0, 0, 0, 0.38); --weekDayColor: rgba(0, 0, 0, 0.38); --entryHoverColor: rgba(0, 0, 0, 0.08); --entrySelectedColor: #43a047; --entryHighlightColor: lightblue; --inputWidth: 90px; --inputPadding: 8px; --inputBorderRadius: 4px; --inputBorderColor: rgba(0, 0, 0, 0.38); --inputHighlightColor: lightblue;"
  >
    <div>
      Header
    </div>
    <div>
      Selector
    </div>
    <div>
      Calendar
    </div>
  </div>
</DocumentFragment>
`;

exports[`Datepicker renders date related props: initialDate: Sun Jan 12 2020 00:00:00 GMT+0000 (Coordinated Universal Time), startDate: Tue Feb 12 2019 00:00:00 GMT+0000 (Coordinated Universal Time), endDate: Fri Feb 12 2021 00:00:00 GMT+0000 (Coordinated Universal Time), today: Mon Jan 13 2020 00:00:00 GMT+0000 (Coordinated Universal Time), minPrecision: year  2`] = `
Object {
  "renderAs": [Function],
  "title": "",
}
`;

exports[`Datepicker renders date related props: initialDate: Sun Jan 12 2020 00:00:00 GMT+0000 (Coordinated Universal Time), startDate: Tue Feb 12 2019 00:00:00 GMT+0000 (Coordinated Universal Time), endDate: Fri Feb 12 2021 00:00:00 GMT+0000 (Coordinated Universal Time), today: Mon Jan 13 2020 00:00:00 GMT+0000 (Coordinated Universal Time), minPrecision: year  3`] = `
Object {
  "endDate": 2021-02-12T00:00:00.000Z,
  "precision": "year",
  "renderAs": [Function],
  "selectedTimestamp": 1578787200000,
  "startDate": 2019-02-12T00:00:00.000Z,
  "todayTimestamp": 1578614400000,
  "visibleTimestamp": 1578787200000,
}
`;

exports[`Datepicker renders date related props: initialDate: Sun Jan 12 2020 00:00:00 GMT+0000 (Coordinated Universal Time), startDate: Tue Feb 12 2019 00:00:00 GMT+0000 (Coordinated Universal Time), endDate: Fri Feb 12 2021 00:00:00 GMT+0000 (Coordinated Universal Time), today: Mon Jan 13 2020 00:00:00 GMT+0000 (Coordinated Universal Time), minPrecision: year  4`] = `
Object {
  "disableDate": [Function],
  "endDate": 2021-02-12T00:00:00.000Z,
  "highlightDate": [Function],
  "onDateSet": [Function],
  "precision": "year",
  "renderAs": [Function],
  "selectedTimestamp": 1578787200000,
  "startDate": 2019-02-12T00:00:00.000Z,
  "todayTimestamp": 1578614400000,
  "visibleTimestamp": 1578787200000,
  "wrapperClassName": "",
}
`;

exports[`Datepicker renders title 1`] = `
Object {
  "renderAs": [Function],
  "title": "Title",
}
`;

exports[`Datepicker renders without header 1`] = `
<DocumentFragment>
  <div
    aria-label=""
    class="datepickerWrapper"
    role="dialog"
    style="--fontPrimary: Helvetica Neue; --fontSecondary: Arial; --fontFallback: sans-serif; --fontSize: 14px; --fontWeight: 400; --fontSizeSmall: 10px; --fontSizeBig: 24px; --calendarWidth: 240px; --datePickerWidth: calc(var(--calendarWidth) + var(--innerPadding) * 2); --selectorHeight: 36px; --calendarHeight: 200px; --innerPadding: 12px; --entryHeight: 32px; --entryMargin: 1px; --datepickerBorderRadius: 4px; --entryBorderRadius: 4px; --bgColor: white; --textColor: black; --headerBgColor: #43a047; --weekendTextColor: red; --headerTextColor: white; --borderColor: rgba(0, 0, 0, 0.38); --modalBgColor: rgba(0, 0, 0, 0.38); --weekDayColor: rgba(0, 0, 0, 0.38); --entryHoverColor: rgba(0, 0, 0, 0.08); --entrySelectedColor: #43a047; --entryHighlightColor: lightblue; --inputWidth: 90px; --inputPadding: 8px; --inputBorderRadius: 4px; --inputBorderColor: rgba(0, 0, 0, 0.38); --inputHighlightColor: lightblue;"
  >
    <div>
      Selector
    </div>
    <div>
      Weekdays
    </div>
    <div>
      Calendar
    </div>
  </div>
</DocumentFragment>
`;
